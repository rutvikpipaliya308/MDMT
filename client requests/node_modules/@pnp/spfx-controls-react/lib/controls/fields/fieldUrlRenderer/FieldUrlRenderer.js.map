{"version":3,"sources":["controls/fields/fieldUrlRenderer/FieldUrlRenderer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,6BAA+B;AAC/B,kEAA2D;AAC3D,wDAAuD;AAGvD,qDAAuD;AAEvD,+EAAoD;AAwBpD;;;;GAIG;AACH;IAAsC,oCAA+D;IACjG,0BAAmB,KAA6B,EAAE,KAA6B;QAA/E,YACI,kBAAM,KAAK,EAAE,KAAK,CAAC,SAKtB;QAHG,SAAS,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QAExC,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IACpB,CAAC;IAGM,iCAAM,GAAb;QACI,IAAM,UAAU,GAAY,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAElD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,CAAC,6BAAK,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,sCAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;gBAAE,6BAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI,CAAM,CAAC,CAAC;QACjM,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,CAAC,oBAAC,WAAI,IAAC,SAAS,EAAE,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,sCAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAQ,CAAC,CAAC;QACnK,CAAC;IACL,CAAC;IAEO,sCAAW,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAbD;QADC,qBAAQ;kDAUR;IAKL,uBAAC;CAxBD,AAwBC,CAxBqC,KAAK,CAAC,SAAS,GAwBpD;AAxBY,4CAAgB","file":"controls/fields/fieldUrlRenderer/FieldUrlRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\nimport * as React from 'react';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\n\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\nimport * as telemetry from '../../../common/telemetry';\n\nimport styles from './FieldUrlRenderer.module.scss';\n\nexport interface IFieldUrlRendererProps extends IFieldRendererProps {\n    /**\n     * text to be displayed\n     */\n    text?: string;\n    /**\n     * url\n     */\n    url: string;\n    /**\n     * if the field should be rendered as image\n     */\n    isImageUrl?: boolean;\n}\n\n/**\n * For future\n */\nexport interface IFieldUrlRendererState {\n\n}\n\n/**\n * Field URL Renderer.\n * Used for:\n *   - URL (Hyperlink, Image)\n */\nexport class FieldUrlRenderer extends React.Component<IFieldUrlRendererProps, IFieldUrlRendererState> {\n    public constructor(props: IFieldUrlRendererProps, state: IFieldUrlRendererState) {\n        super(props, state);\n\n        telemetry.track('FieldUrlRenderer', {});\n\n        this.state = {};\n    }\n\n    @override\n    public render(): JSX.Element {\n        const isImageUrl: boolean = this.props.isImageUrl;\n\n        if (isImageUrl) {\n            return (<div className={css(this.props.className, styles.image)} style={this.props.cssProps} onClick={this._onImgClick.bind(this)}><img src={this.props.url} alt={this.props.text} /></div>);\n        }\n        else {\n            return (<Link className={css(this.props.className, styles.link)} target={'_blank'} href={this.props.url} style={this.props.cssProps}>{this.props.text}</Link>);\n        }\n    }\n\n    private _onImgClick(): void {\n        window.open(this.props.url, '_blank');\n    }\n}\n"],"sourceRoot":"../../../../src"}