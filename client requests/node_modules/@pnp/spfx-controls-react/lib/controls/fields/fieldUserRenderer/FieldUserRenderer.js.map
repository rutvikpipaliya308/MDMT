{"version":3,"sources":["controls/fields/fieldUserRenderer/FieldUserRenderer.tsx"],"names":[],"mappings":"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","file":"controls/fields/fieldUserRenderer/FieldUserRenderer.js","sourcesContent":["import { override } from '@microsoft/decorators';\nimport * as React from 'react';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport { clone } from '@microsoft/sp-lodash-subset';\nimport { IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/common/DirectionalHint';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { IconButton, Button, ButtonType } from 'office-ui-fabric-react/lib/Button';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { IPrincipal, IUserProfileProperties, IODataKeyValuePair } from '../../../common/SPEntities';\nimport { IFieldRendererProps } from '../fieldCommon/IFieldRendererProps';\n\nimport styles from './FieldUserRenderer.module.scss';\nimport { IContext } from '../../../common/Interfaces';\nimport { GeneralHelper } from '../../../common/utilities/GeneralHelper';\nimport { SPHttpClient } from '@microsoft/sp-http';\nimport FieldUserHoverCard, { IFieldUserHoverCardProps } from './FieldUserHoverCard';\nimport * as telemetry from '../../../common/telemetry';\n\nimport * as strings from 'ControlStrings';\nimport { SPHelper } from '../../../common/utilities';\n\nexport interface IFieldUserRendererProps extends IFieldRendererProps {\n  /**\n   * users to be displayed\n   */\n  users?: IPrincipal[];\n  /**\n   * Customizer context\n   */\n  context: IContext;\n}\n\n/**\n * Internal interface to work with user profile\n */\nexport interface IFieldUser {\n  /**\n   * display  name\n   */\n  displayName?: string;\n  /**\n   * job title\n   */\n  jobTitle?: string;\n  /**\n   * department\n   */\n  department?: string;\n  /**\n   * user id\n   */\n  id?: string;\n  /**\n   * avatar url\n   */\n  imageUrl?: string;\n  /**\n   * email\n   */\n  email?: string;\n  /**\n   * skype for business username\n   */\n  sip?: string;\n  /**\n   * true if the user is current user\n   */\n  currentUser?: boolean;\n  /**\n   * work phone\n   */\n  workPhone?: string;\n  /**\n   * cell phone\n   */\n  cellPhone?: string;\n  /**\n   * url to edit user profile in Delve\n   */\n  userUrl?: string;\n}\n\nexport interface IFieldUserRendererState {\n  users?: IFieldUser[];\n}\n\n/**\n * Field User Renderer.\n * Used for:\n *   - People and Groups\n */\nexport class FieldUserRenderer extends React.Component<IFieldUserRendererProps, IFieldUserRendererState> {\n\n  // cached user profiles\n  private _loadedUserProfiles: { [id: string]: IUserProfileProperties } = {};\n  private _userUrlTemplate: string;\n  private _userImageUrl: string;\n\n\n  public constructor(props: IFieldUserRendererProps, state: IFieldUserRendererState) {\n    super(props, state);\n\n    telemetry.track('FieldUserRenderer', {});\n\n    this._userImageUrl = `${GeneralHelper.trimSlash(props.context.pageContext.web.absoluteUrl)}/_layouts/15/userphoto.aspx?size=L&accountname={0}`;\n\n    const users: IFieldUser[] = props.users ? props.users.map(user => {\n      return this._getUserFromPrincipalAndProps(user, {});\n    }) : [];\n\n    this.state = {\n      users: users\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IFieldUserRendererProps) {\n    const currentPrincipals = this.props.users ? this.props.users.map(u => u.id) : [];\n    const newPrincipals = nextProps.users ? nextProps.users.map(u => u.id) : [];\n\n    if (currentPrincipals.length !== newPrincipals.length\n      || currentPrincipals.filter(cp => newPrincipals.indexOf(cp) === -1).length\n      || newPrincipals.filter(np => currentPrincipals.indexOf(np) === -1).length) {\n      this.setState({\n        users: nextProps.users.map(user => {\n          return this._getUserFromPrincipalAndProps(user, {});\n        })\n      });\n    }\n  }\n\n  @override\n  public render(): JSX.Element {\n    const userEls: JSX.Element[] = this.state.users.map((user, index) => {\n      const expandingCardProps: IExpandingCardProps = {\n        onRenderCompactCard: (user.email ? this._onRenderCompactCard.bind(this, index) : null),\n        onRenderExpandedCard: (user.email ? this._onRenderExpandedCard.bind(this) : null),\n        renderData: user,\n        directionalHint: DirectionalHint.bottomLeftEdge,\n        gapSpace: 1,\n        expandedCardHeight: 150\n      };\n      const hoverCardProps: IFieldUserHoverCardProps = {\n        expandingCardProps: expandingCardProps,\n        displayName: user.displayName,\n        cssProps: this.props.cssProps\n      };\n      return <FieldUserHoverCard {...hoverCardProps} />;\n    });\n    return <div style={this.props.cssProps} className={css(this.props.className)}>{userEls}</div>;\n  }\n\n  /**\n   * Renders compact part of user Hover Card\n   * @param index user index in the list of users/groups in the People and Group field value\n   * @param user IUser\n   */\n  private _onRenderCompactCard(index: number, user: IFieldUser): JSX.Element {\n    this._requestUserProfile(user, index);\n    const sip: string = user.sip || user.email;\n    let actionsEl: JSX.Element;\n    if (user.currentUser) {\n      actionsEl = <div className={styles.actions}>\n        <Button buttonType={ButtonType.command} iconProps={{ iconName: 'Edit' }} href={user.userUrl} target={'_blank'}>{strings.UpdateProfile}</Button>\n      </div>;\n    }\n    else {\n      actionsEl = <div className={styles.actions}>\n        <IconButton iconProps={{ iconName: 'Mail' }} title={strings.SendEmailTo.replace('{0}', user.email)} href={`mailto:${user.email}`} />\n        <IconButton iconProps={{ iconName: 'Chat' }} title={strings.StartChatWith.replace('{0}', sip)} href={`sip:${sip}`} className={styles.chat} />\n      </div>;\n    }\n\n    return <div className={styles.main}>\n      <Persona\n        imageUrl={user.imageUrl}\n        primaryText={user.displayName}\n        secondaryText={user.department}\n        tertiaryText={user.jobTitle}\n        size={PersonaSize.large} />\n      {actionsEl}\n    </div>;\n  }\n\n  /**\n   * Renders expanded part of user Hover Card\n   * @param user IUser\n   */\n  private _onRenderExpandedCard(user: IFieldUser): JSX.Element {\n    if (this._loadedUserProfiles[user.id]) {\n      return <ul className={styles.sections}>\n        <li className={styles.section}>\n          <div className={styles.header}>{strings.Contact} <Icon iconName=\"ChevronRight\" className={styles.chevron} /></div>\n          <div className={styles.contactItem}>\n            <Icon iconName={'Mail'} />\n            <Link className={styles.content} title={user.email} href={`mailto:${user.email}`} target={'_self'}>{user.email}</Link>\n          </div>\n          {user.workPhone &&\n            <div className={styles.contactItem}>\n              <Icon iconName={'Phone'} />\n              <Link className={styles.content} title={user.workPhone} href={`tel:${user.workPhone}`} target={'_self'}>{user.workPhone}</Link>\n            </div>\n          }\n          {user.cellPhone &&\n            <div className={styles.contactItem}>\n              <Icon iconName={'Phone'} />\n              <Link className={styles.content} title={user.cellPhone} href={`tel:${user.cellPhone}`} target={'_self'}>{user.cellPhone}</Link>\n            </div>\n          }\n        </li>\n      </ul>;\n    }\n    else {\n      return <Spinner size={SpinnerSize.large} />;\n    }\n  }\n\n  /**\n   * Merges data from IPrincipal object and IUserProfileProperties object to IUser object\n   * @param principal IPrincipal\n   * @param userProfileProperties IUserProfileProperties\n   */\n  private _getUserFromPrincipalAndProps(principal: IPrincipal, userProfileProperties: IUserProfileProperties): IFieldUser {\n    let imageUrl: string = userProfileProperties.pictureUrl || principal.picture;\n    const mthumbStr = 'MThumb.jpg';\n    if (imageUrl && imageUrl.indexOf(mthumbStr) === imageUrl.length - mthumbStr.length) {\n      imageUrl = '';\n    }\n    return {\n      displayName: userProfileProperties.displayName || principal.title,\n      jobTitle: userProfileProperties.jobTitle || principal.jobTitle,\n      department: userProfileProperties.department || principal.department,\n      id: principal.id,\n      imageUrl: imageUrl ? this._userImageUrl.replace('{0}', principal.email) : imageUrl,\n      email: userProfileProperties.email || principal.email,\n      sip: userProfileProperties.sip || principal.sip,\n      workPhone: userProfileProperties.workPhone,\n      cellPhone: userProfileProperties.cellPhone,\n      userUrl: this._getUserUrlTemplate().replace('{0}', principal.email), //userProfileProperties.userUrl\n      currentUser: principal.id == this.props.context.pageContext.legacyPageContext.userId\n    };\n  }\n\n  /**\n   * Get the template of url for editing user profile in Delve\n   */\n  private _getUserUrlTemplate(): string {\n    if (!this._userUrlTemplate) {\n      this._userUrlTemplate = `${location.protocol}//${location.hostname.split('.sharepoint.com')[0]}-my.sharepoint.com/person.aspx?user={0}&v=editprofile`;\n    }\n\n    return this._userUrlTemplate;\n  }\n\n  /**\n   * Requests User Profile Properties\n   */\n  private async _requestUserProfile(user: IFieldUser, index: number): Promise<void> {\n    if (this._loadedUserProfiles[user.id]) {\n      return; // we've already have the profile info\n    }\n\n    const context: IContext = this.props.context;\n\n    const siteUser = await SPHelper.getUserById(parseInt(user.id), context);\n\n    const value = await SPHelper.getUserProperties(siteUser.LoginName, context);\n\n    const mthumbStr = 'MThumb.jpg';\n    const userProfileProps: IUserProfileProperties = {\n      displayName: value.DisplayName,\n      email: value.Email,\n      jobTitle: value.Title,\n      userUrl: value.UserUrl,\n      pictureUrl: value.PictureUrl && value.PictureUrl.toString().indexOf(mthumbStr) === value.PictureUrl.toString().length - mthumbStr.length ? '' : value.PictureUrl //this._userImageUrl.replace('{0}', user.email)\n    };\n\n    const props: IODataKeyValuePair[] = value.UserProfileProperties as IODataKeyValuePair[];\n    let foundPropsCount: number = 0;\n    for (let i = 0, len = props.length; i < len; i++) {\n      const prop: IODataKeyValuePair = props[i];\n      switch (prop.Key) {\n        case 'WorkPhone':\n          userProfileProps.workPhone = prop.Value;\n          foundPropsCount++;\n          break;\n        case 'Department':\n          userProfileProps.department = prop.Value;\n          foundPropsCount++;\n          break;\n        case 'SPS-SipAddress':\n          userProfileProps.sip = prop.Value;\n          foundPropsCount++;\n          break;\n        case 'CellPhone':\n          userProfileProps.cellPhone = prop.Value;\n          foundPropsCount++;\n          break;\n      }\n\n      if (foundPropsCount === 4) {\n        break;\n      }\n    }\n\n    this._loadedUserProfiles[user.id] = userProfileProps;\n    this.setState((prevState: IFieldUserRendererState, componentProps: IFieldUserRendererProps) => {\n      const newUsers = clone<IFieldUser[]>(prevState.users);\n      newUsers[index] = this._getUserFromPrincipalAndProps(this.props.users[index], userProfileProps);\n\n      return { users: newUsers };\n\n    });\n  }\n}\n"],"sourceRoot":"../../../../src"}