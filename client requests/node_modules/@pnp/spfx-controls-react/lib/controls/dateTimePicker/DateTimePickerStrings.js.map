{"version":3,"sources":["controls/dateTimePicker/DateTimePickerStrings.ts"],"names":[],"mappings":";;AAAA,wCAA0C;AAG1C;;GAEG;AACH;IAAA;QACE;;;WAGG;QACI,WAAM,GAAa;YACxB,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,sBAAsB;YAC9B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,2BAA2B;SACpC,CAAC;QACF;;;WAGG;QACI,gBAAW,GAAa;YAC7B,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,6BAA6B;YACrC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,4BAA4B;YACpC,OAAO,CAAC,4BAA4B;SACrC,CAAC;QACF;;;WAGG;QACI,SAAI,GAAa;YACtB,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,uBAAuB;YAC/B,OAAO,CAAC,yBAAyB;SAClC,CAAC;QACF;;;WAGG;QACI,cAAS,GAAa;YAC3B,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,yBAAyB;YACjC,OAAO,CAAC,2BAA2B;YACnC,OAAO,CAAC,0BAA0B;YAClC,OAAO,CAAC,wBAAwB;YAChC,OAAO,CAAC,0BAA0B;SACnC,CAAC;QACF;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,mBAAmB,CAAC;QACvD;;WAEG;QACI,2BAAsB,GAAW,OAAO,CAAC,gCAAgC,CAAC;QACjF;;WAEG;QACI,6BAAwB,GAAW,OAAO,CAAC,kCAAkC,CAAC;QACrF;;WAEG;QACI,8BAAyB,GAAW,OAAO,CAAC,mCAAmC,CAAC;QACvF;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,kBAAkB,CAAC;QACtD;;WAEG;QACI,cAAS,GAAW,OAAO,CAAC,kBAAkB,CAAC;QACtD;;WAEG;QACI,kBAAa,GAAW,OAAO,CAAC,2BAA2B,CAAC;IACrE,CAAC;IAAD,4BAAC;AAAD,CA3FA,AA2FC,IAAA;AA3FY,sDAAqB","file":"controls/dateTimePicker/DateTimePickerStrings.js","sourcesContent":["import * as strings from 'ControlStrings';\nimport { IDateTimePickerStrings } from '.';\n\n/**\n * Defines the labels of the DatePicker control (as months, days, etc.)\n */\nexport class DateTimePickerStrings implements IDateTimePickerStrings {\n  /**\n   * An array of strings for the full names of months.\n   * The array is 0-based, so months[0] should be the full name of January.\n   */\n  public months: string[] = [\n    strings.DatePickerMonthLongJanuary,\n    strings.DatePickerMonthLongFebruary,\n    strings.DatePickerMonthLongMarch,\n    strings.DatePickerMonthLongApril,\n    strings.DatePickerMonthLongMay,\n    strings.DatePickerMonthLongJune,\n    strings.DatePickerMonthLongJuly,\n    strings.DatePickerMonthLongAugust,\n    strings.DatePickerMonthLongSeptember,\n    strings.DatePickerMonthLongOctober,\n    strings.DatePickerMonthLongNovember,\n    strings.DatePickerMonthLongDecember\n  ];\n  /**\n   * An array of strings for the short names of months.\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\n   */\n  public shortMonths: string[] = [\n    strings.DatePickerMonthShortJanuary,\n    strings.DatePickerMonthShortFebruary,\n    strings.DatePickerMonthShortMarch,\n    strings.DatePickerMonthShortApril,\n    strings.DatePickerMonthShortMay,\n    strings.DatePickerMonthShortJune,\n    strings.DatePickerMonthShortJuly,\n    strings.DatePickerMonthShortAugust,\n    strings.DatePickerMonthShortSeptember,\n    strings.DatePickerMonthShortOctober,\n    strings.DatePickerMonthShortNovember,\n    strings.DatePickerMonthShortDecember\n  ];\n  /**\n   * An array of strings for the full names of days of the week.\n   * The array is 0-based, so days[0] should be the full name of Sunday.\n   */\n  public days: string[] = [\n    strings.DatePickerDayLongSunday,\n    strings.DatePickerDayLongMonday,\n    strings.DatePickerDayLongTuesday,\n    strings.DatePickerDayLongWednesday,\n    strings.DatePickerDayLongThursday,\n    strings.DatePickerDayLongFriday,\n    strings.DatePickerDayLongSaturday\n  ];\n  /**\n   * An array of strings for the initials of the days of the week.\n   * The array is 0-based, so days[0] should be the initial of Sunday.\n   */\n  public shortDays: string[] = [\n    strings.DatePickerDayShortSunday,\n    strings.DatePickerDayShortMonday,\n    strings.DatePickerDayShortTuesday,\n    strings.DatePickerDayShortWednesday,\n    strings.DatePickerDayShortThursday,\n    strings.DatePickerDayShortFriday,\n    strings.DatePickerDayShortSaturday\n  ];\n  /**\n   * String to render for button to direct the user to today's date.\n   */\n  public goToToday: string = strings.DatePickerGoToToday;\n  /**\n   * Error message to render for TextField if isRequired validation fails.\n   */\n  public isRequiredErrorMessage: string = strings.DatePickerIsRequiredErrorMessage;\n  /**\n   * Error message to render for TextField if input date string parsing fails.\n   */\n  public invalidInputErrorMessage: string = strings.DatePickerInvalidInputErrorMessage;\n  /**\n   * Error message to render for TextField if date boundary (minDate, maxDate) validation fails.\n   */\n  public isOutOfBoundsErrorMessage: string = strings.DatePickerIsOutOfBoundsErrorMessage;\n  /**\n   * Label for the date selector.\n   */\n  public dateLabel: string = strings.DateTimePickerDate;\n  /**\n   * Label for the time of day selector.\n   */\n  public timeLabel: string = strings.DateTimePickerTime;\n  /**\n   * Separator between time of day components (hours, minutes, seconds).\n   */\n  public timeSeparator: string = strings.DateTimePickerTimeSeparator;\n}\n"],"sourceRoot":"../../../src"}