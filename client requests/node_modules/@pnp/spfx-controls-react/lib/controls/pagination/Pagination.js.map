{"version":3,"sources":["controls/pagination/Pagination.tsx"],"names":[],"mappings":"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","file":"controls/pagination/Pagination.js","sourcesContent":["import * as React from \"react\";\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport styles from \"./Pagination.module.scss\";\nimport { isEqual } from \"lodash\";\n\nexport interface IPaginationProps {\n    /**\n     * The page initial selected\n     */\n    currentPage: number;\n    /**\n     * The total of page that you want to show on control\n     */\n    totalPages: number;\n    /**\n     * When the page number change send the page number selected\n     */\n    onChange: (page: number) => void;\n    /**\n     * The number of pages showing before the icon\n     */\n    limiter?: number;\n    /**\n     * Hide the quick jump to the first page\n     */\n    hideFirstPageJump?: boolean;\n    /**\n     * Hide the quick jump to the last page\n     */\n    hideLastPageJump?: boolean;\n    /**\n     * Limitir icon, by default is More icon\n     */\n    limiterIcon?: string;\n}\n\nexport interface IPaginationState {\n    currentPage: number;\n    paginationElements: number[];\n    limiter: number;\n}\n\nexport class Pagination extends React.Component<IPaginationProps, IPaginationState> {\n    constructor(props: Readonly<IPaginationProps>) {\n        super(props);\n\n        const paginationElements = this.preparePaginationElements(props.totalPages);\n\n        this.state = {\n            currentPage: props.currentPage,\n            paginationElements,\n            limiter: props.limiter ? props.limiter : 3,\n        };\n    }\n\n    public componentDidUpdate(prevProps: IPaginationProps) {\n        let { currentPage, paginationElements } = this.state;\n\n        if (prevProps.totalPages !== this.props.totalPages) {\n            paginationElements = this.preparePaginationElements(this.props.totalPages);\n            currentPage = this.state.currentPage > this.props.totalPages ? this.props.totalPages : this.state.currentPage;\n        }\n        if (prevProps.totalPages !== this.props.totalPages && this.props.currentPage !== prevProps.currentPage) {\n            currentPage = this.props.currentPage;\n        }\n\n        if (!isEqual(this.state.currentPage, currentPage) || !isEqual(this.state.paginationElements, paginationElements)) {\n            this.setState({\n                paginationElements,\n                currentPage\n            });\n        }\n    }\n\n    public render(): React.ReactElement<IPaginationProps> {\n        return (\n            <div className={`${styles.pagination} pagination-container`}>\n                {!this.props.hideFirstPageJump &&\n                    <DefaultButton\n                        className={`${styles.buttonStyle} pagination-button pagination-button_first`}\n                        onClick={() => this.onClick(1)}\n                        iconProps={{ iconName: \"DoubleChevronLeft\" }}>\n                    </DefaultButton>\n                }\n\n                {this.state.paginationElements.map((pageNumber) => this.renderPageNumber(pageNumber))}\n\n                {!this.props.hideLastPageJump &&\n                    <DefaultButton\n                        className={`${styles.buttonStyle} pagination-button pagination-button_last`}\n                        onClick={() => this.onClick(this.props.totalPages)}\n                        iconProps={{ iconName: \"DoubleChevronRight\" }}>\n                    </DefaultButton>\n                }\n            </div>\n        );\n    }\n\n    private preparePaginationElements = (totalPages: number) => {\n        let paginationElementsArray = [];\n        for (let i = 0; i < totalPages; i++) {\n            paginationElementsArray.push(i + 1);\n        }\n        return paginationElementsArray;\n    }\n\n    private onClick = (page: number) => {\n        this.setState({ currentPage: page });\n        this.props.onChange(page);\n    }\n\n    private renderPageNumber(pageNumber) {\n        if (pageNumber === this.state.currentPage) {\n            return (\n                <PrimaryButton\n                    className={styles.buttonStyle}\n                    onClick={() => this.onClick(pageNumber)}\n                    text={pageNumber}>\n                </PrimaryButton>\n            );\n        } else {\n            if (!(pageNumber < this.state.currentPage - this.state.limiter || pageNumber > this.state.currentPage + this.state.limiter)) {\n                return (\n                    <DefaultButton\n                        className={styles.buttonStyle}\n                        onClick={() => this.onClick(pageNumber)}\n                        text={pageNumber}>\n                    </DefaultButton>);\n            }\n            else if (!(pageNumber < this.state.currentPage - this.state.limiter - 1 || pageNumber > this.state.currentPage + this.state.limiter + 1)) {\n                if (this.props.limiterIcon) {\n                    return (<DefaultButton\n                        className={styles.buttonStyle}\n                        onClick={() => this.onClick(pageNumber)}\n                        iconProps={{ iconName: this.props.limiterIcon ? this.props.limiterIcon : \"More\" }}>\n                    </DefaultButton>);\n                }\n                else {\n                    return (<DefaultButton\n                        className={styles.buttonStyle}\n                        onClick={() => this.onClick(pageNumber)}\n                        iconProps={{ iconName: this.props.limiterIcon ? this.props.limiterIcon : \"More\" }}>\n                    </DefaultButton>);\n                }\n            }\n            else {\n                return;\n            }\n        }\n    }\n}"],"sourceRoot":"../../../src"}