{"version":3,"sources":["controls/listItemAttachments/UploadAttachment.tsx"],"names":[],"mappings":"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","file":"controls/listItemAttachments/UploadAttachment.js","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, } from 'office-ui-fabric-react/lib/Button';\nimport { IUploadAttachmentProps } from './IUploadAttachmentProps';\nimport { IUploadAttachmentState } from './IUploadAttachmentState';\nimport SPservice from \"../../services/SPService\";\nimport * as strings from 'ControlStrings';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { ProgressIndicator } from 'office-ui-fabric-react/lib/ProgressIndicator';\nimport { createRef } from '@uifabric/utilities/lib';\nimport styles from './ListItemAttachments.module.scss';\n\nexport class UploadAttachment extends React.Component<IUploadAttachmentProps, IUploadAttachmentState> {\n  private _spservice: SPservice;\n  private fileInput;\n\n  constructor(props: IUploadAttachmentProps) {\n    super(props);\n\n    this.state = {\n      file: null,\n      hideDialog: true,\n      dialogMessage: '',\n      isLoading: false,\n    };\n\n    // Get SPService\n    this._spservice = new SPservice(this.props.context);\n    this.fileInput = createRef();\n  }\n\n  /**\n   * componentDidUpdate lifecycle hook\n   *\n   * @param prevProps\n   * @param prevState\n   */\n  public componentDidUpdate(prevProps: IUploadAttachmentProps, prevState: IUploadAttachmentState): void {\n    if (this.props.fireUpload) {\n      this.fileInput.current.value = '';\n      this.fileInput.current.click();\n    }\n  }\n\n  /**\n   * On attachment upload event\n   */\n  private onAttachmentUpload = () => {\n    // fire click event\n    this.fileInput.current.value = '';\n    this.fileInput.current.click();\n  }\n\n  /**\n   * Add a new attachment\n   */\n  private addAttachment = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    this.setState({\n      isLoading: true\n    });\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = async () => {\n      this.setState({\n        file: file\n      });\n\n      try {\n        await this._spservice.addAttachment(this.props.listId, this.props.itemId, file.name, file, this.props.webUrl);\n\n        this.setState({\n          isLoading: false\n        });\n        this.props.onAttachmentUpload();\n      } catch (error) {\n        this.setState({\n          hideDialog: false,\n          isLoading: false,\n          dialogMessage: strings.ListItemAttachmentsuploadAttachmentErrorMsg.replace('{0}', file.name).replace('{1}', error.message)\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  }\n\n  /**\n   * Close dialog\n   */\n  private closeDialog = () => {\n    this.setState({\n      hideDialog: true,\n      dialogMessage: '',\n    });\n  }\n\n  /**\n   * Default React render method\n   */\n  public render() {\n    return (\n      <div>\n        <input id=\"file-picker\"\n               style={{ display: 'none' }}\n               type=\"file\"\n               onChange={(e) => this.addAttachment(e)}\n               ref={this.fileInput} />\n        <div className={styles.uploadBar}>\n          <CommandBar\n            items={[{\n              key: 'Add',\n              name: strings.ListItemAttachmentsCommandBarAddAttachmentLabel,\n              iconProps: {\n                iconName: 'Upload'\n              },\n              onClick: this.onAttachmentUpload,\n              disabled: this.props.disabled\n            }]}\n          />\n        </div>\n        <div>\n          {\n            this.state.isLoading ? <ProgressIndicator label={strings.ListItemAttachmentsloadingMessage} /> : \"\"\n          }\n        </div>\n        <Dialog\n          hidden={this.state.hideDialog}\n          type={DialogType.normal}\n          onDismiss={this.closeDialog}\n          dialogContentProps={{\n            type: DialogType.normal,\n            title: strings.ListItemAttachmentsuploadAttachmentDialogTitle,\n            subText: this.state.dialogMessage\n          }}\n          modalProps={{\n            isBlocking: true,\n            containerClassName: 'ms-dialogMainOverride'\n          }} >\n          <DialogFooter>\n            <PrimaryButton onClick={this.closeDialog}>OK</PrimaryButton>\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}