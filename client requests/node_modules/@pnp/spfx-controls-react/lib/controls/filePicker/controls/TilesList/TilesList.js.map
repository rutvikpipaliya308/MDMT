{"version":3,"sources":["controls/filePicker/controls/TilesList/TilesList.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/controls/TilesList/TilesList.js","sourcesContent":["import * as React from 'react';\nimport styles from './TilesList.module.scss';\nimport { SelectionZone, ISelection, Selection, SelectionMode } from 'office-ui-fabric-react/lib/Selection';\nimport { IFile } from '../../../../services/FileBrowserService.types';\nimport { List, IPageProps } from 'office-ui-fabric-react/lib/List';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { IRenderFunction, IRectangle, css } from 'office-ui-fabric-react/lib/Utilities';\nimport { FolderTile } from '../FolderTile';\nimport { DocumentTile } from '../DocumentTile';\nimport { ITilesListProps } from './ITilesListProps';\n\n/**\n * Rows per page\n */\nconst ROWS_PER_PAGE: number = 3;\n\n/**\n * Maximum row height\n */\nconst MAX_ROW_HEIGHT: number = 250;\n\n/**\n * Maximum number of cells per page\n */\nconst CELLS_PER_PAGE: number = 48;\n\n/**\n * Standard tile margin\n */\nconst STANDARD_TILE_MARGIN: number = 4;\n\n/**\n * Standard left and right padding\n */\nconst TILE_HORZ_PADDING: number = 32;\n\n/**\n * Standard bottom margin\n */\nconst BOTTOM_MARGIN: number = 36;\n\nconst LAYOUT_STORAGE_KEY: string = 'comparerOneDriveLayout';\n\n\nexport class TilesList extends React.Component<ITilesListProps> {\n  private _columnCount: number;\n  private _columnWidth: number;\n  private _rowHeight: number;\n  private _listElem: List = undefined;\n  private _pageWidth: number;\n\n  constructor(props: ITilesListProps) {\n    super(props);\n  }\n\n  public componentDidUpdate(prevProps: ITilesListProps) {\n    if (this.props.filePickerResult != prevProps.filePickerResult) {\n      this._listElem.forceUpdate();\n    }\n  }\n\n  public render(): React.ReactElement<ITilesListProps> {\n    return (\n      <SelectionZone selection={this.props.selection} onItemInvoked={(item: IFile) => {this._handleItemInvoked(item);}}>\n        <FocusZone>\n          <List\n            ref={(e:any) => { this._listElem = e; }}\n            className={styles.folderList}\n            items={this.props.items}\n\n            getItemCountForPage={this._getItemCountForPage}\n            getPageHeight={this._getPageHeight}\n            onRenderPage={(pageProps: IPageProps, defaultRender?: IRenderFunction<IPageProps>) => this._onRenderPage(pageProps, defaultRender)}\n          />\n        </FocusZone>\n      </SelectionZone>\n    );\n  }\n\n  /**\n  * Gets called what a file is selected.\n  */\n private _handleItemInvoked = (item: IFile) => {\n  // If a file is selected, open the library\n  if (item.isFolder) {\n    this.props.onFolderOpen(item);\n  } else {\n    // Otherwise, remember it was selected\n    this.props.onFileSelected(item);\n  }\n}\n\n  /**\n    * Calculates how many items there should be in the page\n    */\n   private _getItemCountForPage = (itemIndex: number, surfaceRect: IRectangle): number => {\n    if (itemIndex === 0) {\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\n      this._rowHeight = this._columnWidth;\n      this._pageWidth = surfaceRect.width;\n    }\n\n    // Get the list of items\n    const { items } = this.props;\n    const isFolder: boolean = items && items.length > itemIndex && items[itemIndex] ? items[itemIndex].isFolder : undefined;\n\n    // Group items by folders and files\n    let pageLength: number = 0;\n    for (let index = itemIndex; index < items.length; index++) {\n      const element = items[index];\n      if (element && element.isFolder === isFolder) {\n        pageLength++;\n      } else {\n        break;\n      }\n    }\n\n    // Return the page lenght, up to the maximum number of cells per page\n    return Math.min(pageLength, CELLS_PER_PAGE);\n  }\n\n  /**\n   * Renders a custom list page\n   */\n  private _onRenderPage = (pageProps: IPageProps, _defaultRender?: IRenderFunction<IPageProps>): JSX.Element => {\n    const {\n      page,\n      className: pageClassName,\n      ...divProps\n    } = pageProps;\n\n    const { items } = page;\n    // If there are not items to be rendered or the last one is a null mark -> request for next page data\n    if (!items) {\n      return null;\n    }\n\n    return (<div {...divProps} className={css(pageClassName, styles.listPage)} key={page.key}>\n      <div className={styles.grid}\n        style={{\n          width: this._pageWidth,\n          marginTop: -STANDARD_TILE_MARGIN,\n          marginBottom: BOTTOM_MARGIN,\n          marginLeft: -STANDARD_TILE_MARGIN,\n          marginRight: -STANDARD_TILE_MARGIN\n        }}\n      >\n        {items.map((item: IFile, index: number) => {\n          return this._onRenderCell(item, index);\n        })}\n      </div>\n    </div>);\n  }\n\n  /** Calculates the list \"page\" height (a.k.a. row) */\n  private _getPageHeight = (): number => {\n    return this._rowHeight * ROWS_PER_PAGE;\n  }\n\n  /**\n   * Renders a file folder cover\n   */\n  private _onRenderCell = (item: IFile, index: number | undefined): JSX.Element => {\n    if (!item) {\n      this.props.onNextPageDataRequest();\n      return null;\n    }\n    let isSelected: boolean = this.props.filePickerResult && item.absoluteUrl == this.props.filePickerResult.fileAbsoluteUrl;\n\n    // I know this is a lot of divs and spans inside of each other, but my\n    // goal was to mimic the HTML and style of the out-of-the-box file picker\n    // to the best of my ability.\n    return (\n      <div\n        className={styles.listCell}\n        data-item-index={index}\n        style={{\n          flexBasis: this._columnWidth,\n          maxWidth: this._columnWidth,\n          margin: STANDARD_TILE_MARGIN,\n          borderStyle: \"none\",\n          borderWidth: 0\n        }}\n      >\n        <div\n          role=\"presentation\"\n          className={styles.cell}\n\n          // I don't agree with this magic number. Where does this come from?\n          style={{ paddingTop: \"97.16%\" }}\n        >\n          <div role=\"presentation\" className={styles.cellContent}>\n            {\n              item.isFolder ?\n                <FolderTile\n                  item={item}\n                  index={index}\n                  isSelected={isSelected}\n                  pageWidth={this._pageWidth}\n                  tileDimensions={{\n                    width: this._columnWidth - TILE_HORZ_PADDING,\n                    height: this._rowHeight - TILE_HORZ_PADDING\n                  }}\n                  onItemInvoked={(itemInvoked: IFile) => this._handleItemInvoked(itemInvoked)}\n                />\n              :\n                <DocumentTile\n                  fileBroserService={this.props.fileBrowserService}\n                  item={item}\n                  index={index}\n                  isSelected={isSelected}\n                  pageWidth={this._pageWidth}\n                  tileDimensions={{\n                    width: this._columnWidth - TILE_HORZ_PADDING,\n                    height: this._rowHeight - TILE_HORZ_PADDING\n                  }}\n                  onItemInvoked={(itemInvoked: IFile) => this._handleItemInvoked(itemInvoked)}\n                />\n              }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../../src"}