{"version":3,"sources":["controls/filePicker/OneDriveFilesTab/OneDriveFilesTab.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/OneDriveFilesTab/OneDriveFilesTab.js","sourcesContent":["import * as React from 'react';\nimport { IOneDriveFilesTabProps, IOneDriveFilesTabState } from '.';\nimport { IFile } from '../../../services/FileBrowserService.types';\nimport { OneDriveFilesBreadcrumbItem } from './OneDriveFilesTab.types';\nimport { findIndex } from '@microsoft/sp-lodash-subset';\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { FileBrowser } from '../controls';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { IFilePickerResult } from '../FilePicker.types';\n\nimport styles from './OneDriveFilesTab.module.scss';\nimport * as strings from 'ControlStrings';\n\nexport class OneDriveFilesTab extends React.Component<IOneDriveFilesTabProps, IOneDriveFilesTabState> {\n  constructor(props: IOneDriveFilesTabProps) {\n    super(props);\n\n    this.state = {\n      filePickerResult: null,\n      libraryAbsolutePath: undefined,\n      libraryTitle: strings.DocumentLibraries,\n      folderPath: undefined,\n      folderName: strings.DocumentLibraries,\n      breadcrumbItems: []\n    };\n  }\n\n  public async componentDidMount() {\n    const folderPath = await this.props.oneDriveService.getOneDriveRootFolderRelativeUrl();\n    const libraryAbsolutePath = await this.props.oneDriveService.getOneDriveRootFolderFullUrl();\n    const libraryTitle = await this.props.oneDriveService.getOneDrivePersonalLibraryTitle();\n\n    const oneDriveFolderData: IFile = {\n      isFolder: true,\n      modified: null,\n      absoluteUrl: libraryAbsolutePath,\n      name: libraryTitle,\n      fileIcon: \"\",\n      serverRelativeUrl: folderPath,\n      spItemUrl: \"\",\n      supportsThumbnail: false,\n      fileType: \"\"\n    };\n\n    const breadcrumbItems = this.state.breadcrumbItems;\n    // Add OneDrive folder as a first node\n    const breadcrumbNode: OneDriveFilesBreadcrumbItem = {\n      folderData: oneDriveFolderData,\n      isCurrentItem: true,\n      text: oneDriveFolderData.name,\n      key: oneDriveFolderData.absoluteUrl\n    };\n    breadcrumbNode.onClick = () => { this.onBreadcrumpItemClick(breadcrumbNode); };\n    breadcrumbItems.push(breadcrumbNode);\n\n    this.setState({\n      libraryAbsolutePath: libraryAbsolutePath,\n      folderName: folderPath,\n      libraryTitle\n    });\n  }\n\n  public render(): React.ReactElement<IOneDriveFilesTabProps> {\n    return (\n      <div className={styles.tabContainer}>\n        <div className={styles.tabHeaderContainer}>\n          <Breadcrumb items={this.state.breadcrumbItems} onRenderItem={this.renderBreadcrumbItem} className={styles.breadcrumbNav}/>\n        </div>\n        <div className={styles.tabFiles}>\n          {this.state.libraryAbsolutePath !== undefined &&\n            <FileBrowser\n              onChange={(filePickerResult: IFilePickerResult) => this._handleSelectionChange(filePickerResult)}\n              onOpenFolder={(folder: IFile) => this._handleOpenFolder(folder, true)}\n              fileBrowserService={this.props.oneDriveService}\n              libraryName={this.state.libraryTitle}\n              folderPath={this.state.folderPath}\n              accepts={this.props.accepts} />}\n        </div>\n        <div className={styles.actionButtonsContainer}>\n          <div className={styles.actionButtons}>\n            <PrimaryButton\n              disabled={!this.state.filePickerResult}\n              onClick={() => this._handleSave()} className={styles.actionButton}>{strings.OpenButtonLabel}</PrimaryButton>\n            <DefaultButton onClick={() => this._handleClose()} className={styles.actionButton}>{strings.CancelButtonLabel}</DefaultButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderBreadcrumbItem = (item: IBreadcrumbItem): JSX.Element => {\n    return (\n      <Link href={item.href} onClick={item.onClick} key={item.key} className={`ms-Link ms-Breadcrumb-itemLink ${styles.breadcrumbNavItem}`}>{item.text}</Link>\n    );\n  }\n\n  /**\n   * Handles breadcrump item click\n   */\n  private onBreadcrumpItemClick = (node: OneDriveFilesBreadcrumbItem) => {\n    let { breadcrumbItems } = this.state;\n    let breadcrumbClickedItemIndx = 0;\n    // Site node clicked\n    if (node.folderData == null) {\n      this.setState({\n        libraryAbsolutePath: undefined,\n        folderPath: undefined,\n        folderName: undefined\n      });\n    }\n    // Check if it is folder item\n    else if (node.folderData != null) {\n      this._handleOpenFolder(node.folderData, false);\n      // select which node has been clicked\n      breadcrumbClickedItemIndx = findIndex(breadcrumbItems, item => item.folderData && item.folderData.absoluteUrl === node.key);\n    }\n\n    // Trim nodes array\n    breadcrumbItems = breadcrumbItems.slice(0, breadcrumbClickedItemIndx + 1);\n    // Set new current node\n    breadcrumbItems[breadcrumbItems.length - 1].isCurrentItem = true;\n\n    this.setState({\n      breadcrumbItems,\n      filePickerResult: undefined\n    });\n  }\n\n  /**\n   * Is called when user selects a different file\n   */\n  private _handleSelectionChange = (filePickerResult: IFilePickerResult) => {\n    if (filePickerResult) {\n      filePickerResult.downloadFileContent = () => { return this.props.oneDriveService.downloadSPFileContent(filePickerResult.spItemUrl, filePickerResult.fileName); };\n    }\n    this.setState({\n      filePickerResult\n    });\n  }\n\n  /**\n   * Called when user saves\n   */\n  private _handleSave = () => {\n    this.props.onSave(this.state.filePickerResult);\n  }\n\n  /**\n   * Called when user closes tab\n   */\n  private _handleClose = () => {\n    this.props.onClose();\n  }\n\n  /**\n   * Triggered when user opens a file folder\n   */\n  private _handleOpenFolder = (folder: IFile, addBreadcrumbNode: boolean) => {\n    const { breadcrumbItems } = this.state;\n\n    if (addBreadcrumbNode) {\n      breadcrumbItems.map(item => item.isCurrentItem = false);\n      const breadcrumbNode: OneDriveFilesBreadcrumbItem = {\n        folderData: folder,\n        isCurrentItem: true,\n        text: folder.name,\n        key: folder.absoluteUrl\n      };\n      breadcrumbNode.onClick = () => { this.onBreadcrumpItemClick(breadcrumbNode); };\n      breadcrumbItems.push(breadcrumbNode);\n    }\n\n    this.setState({\n      folderPath: folder.serverRelativeUrl,\n      folderName: folder.name,\n      libraryAbsolutePath: folder.absoluteUrl,\n      breadcrumbItems\n    });\n  }\n}\n"],"sourceRoot":"../../../../src"}