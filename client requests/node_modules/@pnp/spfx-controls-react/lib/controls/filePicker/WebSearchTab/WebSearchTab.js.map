{"version":3,"sources":["controls/filePicker/WebSearchTab/WebSearchTab.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/WebSearchTab/WebSearchTab.js","sourcesContent":["import * as React from 'react';\n\nimport { IWebSearchTabProps, IWebSearchTabState, ISearchSuggestion, ImageSize, ImageAspect, ImageLicense, DEFAULT_SUGGESTIONS, MAX_ROW_HEIGHT, ROWS_PER_PAGE } from '.';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Check } from 'office-ui-fabric-react/lib/Check';\nimport { Dropdown, IDropdownProps, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { IRectangle } from 'office-ui-fabric-react/lib/Utilities';\nimport { Selection, SelectionMode, SelectionZone } from 'office-ui-fabric-react/lib/Selection';\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\nimport { css } from '@uifabric/utilities/lib/css';\nimport { IFilePickerResult } from '../FilePicker.types';\nimport { GeneralHelper } from '../../../common/utilities';\nimport { ISearchResult, BingQuerySearchParams } from '../../../services/FilesSearchService.types';\n\nimport styles from './WebSearchTab.module.scss';\nimport * as strings from 'ControlStrings';\n\n/**\n * Renders search suggestions and performs seach queries\n */\nexport default class WebSearchTab extends React.Component<IWebSearchTabProps, IWebSearchTabState> {\n  private _columnCount: number;\n  private _columnWidth: number;\n  private _rowHeight: number;\n  private _selection: Selection;\n  private _listElem: List = undefined;\n\n  constructor(props: IWebSearchTabProps) {\n    super(props);\n\n    this._selection = new Selection({\n      selectionMode: SelectionMode.single,\n      onSelectionChanged: this._onSelectionChanged\n    });\n\n    this.state = {\n      isLoading: false,\n      results: undefined,\n      filePickerResult: null\n    };\n  }\n\n  /**\n   * Render the tab\n   */\n  public render(): React.ReactElement<IWebSearchTabProps> {\n    const { query, results } = this.state;\n\n    return (\n      <div className={styles.tabContainer}>\n        <div className={styles.tabHeaderContainer}>\n          <Link onClick={this._clearSearch}>\n            <h2 className={styles.tabHeader}>{strings.WebSearchLinkLabel}</h2>\n          </Link>\n          {this.props.bingSearchService && this._renderSearchBox()}\n        </div>\n        <div className={styles.tab}>\n          { !query && this._renderSearchSuggestions() }\n          { query && results && this._renderSearchResults() }\n        </div>\n        <div className={styles.actionButtonsContainer}>\n          {\n            this.state.results && this.state.license === 'Any' &&\n            <MessageBar>\n              {strings.CreativeCommonsMessage}\n            </MessageBar>}\n          <Label className={styles.copyrightLabel}>\n            {strings.CopyrightWarning}&nbsp;&nbsp;\n            <Link target='_blank' href={strings.CopyrightUrl}>{strings.LearnMoreLink}</Link>\n          </Label>\n\n          <div className={styles.actionButtons}>\n            <PrimaryButton\n              disabled={!this.state.filePickerResult}\n              className={styles.actionButton}\n              onClick={() => this._handleSave()}\n            >{strings.OpenButtonLabel}</PrimaryButton>\n            <DefaultButton onClick={() => this._handleClose()} className={styles.actionButton}>{strings.CancelButtonLabel}</DefaultButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _onSelectionChanged = () => {\n    // Get the selected item\n    const selectedItems = this._selection.getSelection();\n    const filePickerResult = this.state.filePickerResult;\n\n    let selectedFileResult: IFilePickerResult = null;\n    if (selectedItems && selectedItems.length > 0) {\n      //Get the selected key\n      const selectedItem: ISearchResult = selectedItems[0] as ISearchResult;\n\n      //Brute force approach to making sure all URLs are loading over HTTPS\n      // even if it breaks the page.\n      const selectedUrl: string = selectedItem.contentUrl.replace('http://', 'https://');\n      selectedFileResult = {\n        fileAbsoluteUrl: selectedUrl,\n        fileName: GeneralHelper.getFileNameFromUrl(selectedUrl),\n        fileNameWithoutExtension: GeneralHelper.getFileNameWithoutExtension(selectedUrl),\n        downloadFileContent: () => { return this.props.bingSearchService.downloadBingContent(selectedUrl, GeneralHelper.getFileNameFromUrl(selectedUrl)); }\n      };\n    }\n\n    // If clicked on already selected file -> deselect it\n    if (filePickerResult && selectedFileResult && filePickerResult.fileAbsoluteUrl === selectedFileResult.fileAbsoluteUrl) {\n      this._selection.setAllSelected(false);\n      selectedFileResult = null;\n    }\n\n    // Save the selected file\n    this.setState({\n      filePickerResult: selectedFileResult\n    });\n    if (this._listElem) {\n      // Force the list to update to show the selection check\n      this._listElem.forceUpdate();\n    }\n  }\n\n  /**\n   * Resets state of the control to the default one\n   */\n  private _clearSearch = () => {\n    this.setState({\n      query: undefined,\n      results: undefined,\n      filePickerResult: undefined\n    });\n  }\n\n  /**\n   * Renders the returned search results\n   */\n  private _renderSearchResults = (): JSX.Element => {\n    const { results } = this.state;\n\n    // If there are no results, tell 'em.\n    if (results === undefined || results.length < 1) {\n      return <Label className={styles.noResultLabel}>{strings.NoResultsBadEnglish}</Label>;\n    }\n\n    return (\n      <FocusZone>\n        <SelectionZone selection={this._selection}\n          onItemInvoked={(item: ISearchResult) => this._selection.setKeySelected(item.key, true, true)}\n        >\n          <List\n            ref={this._linkElement}\n            className={styles.bingGrildList}\n            items={this.state.results}\n            getItemCountForPage={this._getItemCountForPage}\n            getPageHeight={this._getPageHeight}\n            renderedWindowsAhead={4}\n            onRenderCell={this._onRenderSearchResultsCell}\n          />\n        </SelectionZone>\n      </FocusZone>\n    );\n  }\n\n  /**\n   * Show an individual search result item\n   */\n  private _onRenderSearchResultsCell = (item: ISearchResult, index: number | undefined): JSX.Element => {\n    const { query } = this.state;\n\n    let isSelected: boolean = false;\n\n    if (this._selection && index !== undefined) {\n      isSelected = this._selection.isIndexSelected(index);\n    }\n\n    // The logic for calculating the thumbnail dimensions is not quite the same as the out-of-the-box file picker,\n    // but it'll have to do.\n\n    // Find the aspect ratio of the picture\n    const ratio: number = item.width / item.height;\n\n    // Fit the height to the desired row height\n    let thumbnailHeight: number = Math.min(this._rowHeight, item.height);\n\n    // Resize the picture with the same aspect ratio\n    let thumbnailWidth: number = thumbnailHeight * ratio;\n\n    const searchResultAltText: string = strings.SearchResultAlt.replace('{0}', query);\n    return (\n      <div\n        className={styles.bingGridListCell}\n        style={{\n          width: 100 / this._columnCount + '%'\n        }}\n      >\n        <div\n          aria-label={searchResultAltText}\n          className={css(styles.bingTile, isSelected ? styles.isSelected : undefined)}\n          data-is-focusable={true}\n          data-selection-index={index}\n          style={{\n            width: `${thumbnailWidth}px`,\n            height: `${thumbnailHeight}px`\n          }}>\n          <div className={styles.bingTileContent} data-selection-invoke={true}>\n            <Image src={item.thumbnailUrl} className={styles.bingTileThumbnail} alt={searchResultAltText} width={thumbnailWidth} height={thumbnailHeight} />\n            <div className={styles.bingTileFrame}></div>\n            <div className={styles.bingTileCheckCircle}\n              role='checkbox'\n              aria-checked={isSelected}\n              data-item-index={index} data-selection-toggle={true} data-automationid='CheckCircle'>\n              <Check checked={isSelected} />\n            </div>\n            <div className={styles.bingTileNamePlate}>\n              <Link\n                href={item.contentUrl}\n                target='_blank'\n                aria-label={strings.SearchResultAriaLabel}\n              >{item.displayUrl}</Link>\n            </div>\n          </div>\n        </div>\n      </div>);\n  }\n\n  /**\n   * Renders suggestions when there aren't any queries\n   */\n  private _renderSearchSuggestions = (): JSX.Element => {\n    const suggestions: ISearchSuggestion[] = this.props.suggestions !== undefined ? this.props.suggestions : DEFAULT_SUGGESTIONS;\n\n    return (\n      <FocusZone>\n        <List\n          className={styles.filePickerFolderCardGrid}\n          items={suggestions}\n          getItemCountForPage={this._getItemCountForPage}\n          getPageHeight={this._getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={this._onRenderSuggestionCell}\n        />\n      </FocusZone>\n    );\n  }\n\n  /**\n   * Gets search results from Bing\n   */\n  private _getSearchResults = async () => {\n    // Do nothing\n    if (this.state.query === undefined || !this.props.bingSearchService) {\n      return;\n    }\n\n    // Show a loading indicator + remove selection\n    this.setState({\n      filePickerResult: null,\n      isLoading: true\n    });\n\n    const searchParams: BingQuerySearchParams = {\n      aspect: this.state.aspect,\n      size: this.state.size,\n      license: this.state.license,\n      query: this.state.query\n    };\n    const searchResults = await this.props.bingSearchService.executeBingSearch(searchParams);\n\n    // If the results were obtained\n    if (searchResults) {\n      // Set the items so that the selection zone can keep track of them\n      this._selection.setItems(searchResults, true);\n    }\n\n    // Save results and stop loading indicator\n    this.setState({\n      isLoading: false,\n      results: searchResults\n    });\n  }\n\n  /**\n   * Calculates how many items there should be in the page\n   */\n  private _getItemCountForPage = (itemIndex: number, surfaceRect: IRectangle): number => {\n    if (itemIndex === 0) {\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\n      this._rowHeight = this._columnWidth;\n    }\n\n    return this._columnCount * ROWS_PER_PAGE;\n  }\n\n  /**\n   * Gets the height of a list \"page\"\n   */\n  private _getPageHeight = (): number => {\n    return this._rowHeight * ROWS_PER_PAGE;\n  }\n\n  /**\n   * Renders a cell for search suggestions\n   */\n  private _onRenderSuggestionCell = (item: ISearchSuggestion, index: number | undefined): JSX.Element => {\n    return (\n      <div\n        className={styles.filePickerFolderCardTile}\n        data-is-focusable={true}\n        style={{\n          width: 100 / this._columnCount + '%'\n        }}\n      >\n        <div className={styles.filePickerFolderCardSizer}>\n          <div className={styles.filePickerFolderCardPadder}>\n            <Image src={item.backgroundUrl} className={styles.filePickerFolderCardImage} imageFit={ImageFit.cover} />\n            <DefaultButton className={styles.filePickerFolderCardLabel} onClick={(_event) => this._handleSearch(item.topic)}>{item.topic}</DefaultButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Renders the search box\n   */\n  private _renderSearchBox = (): JSX.Element => {\n    const { query } = this.state;\n    const hasQuery: boolean = query !== undefined;\n    const license: string = this.state.license ? this.state.license : 'All';\n\n    return (\n      <div className={styles.searchBoxContainer}>\n        <div className={styles.searchBoxMedium}>\n          <div className={styles.searchBox}>\n            <SearchBox\n              placeholder={strings.SearchBoxPlaceholder}\n              value={query}\n              onSearch={newQuery => this._handleSearch(newQuery)}\n            />\n          </div>\n        </div>\n        <Label>{strings.PoweredByBing}</Label>\n        {\n          hasQuery &&\n          <div className={styles.dropdownContainer}>\n            <Dropdown\n              className={styles.filterDropdown}\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\n              selectedKey={this.state.size}\n              options={[\n                { key: 'All', text: strings.SizeOptionAll },\n                { key: 'Small', text: strings.SizeOptionSmall },\n                { key: 'Medium', text: strings.SizeOptionMedium },\n                { key: 'Large', text: strings.SizeOptionLarge },\n                { key: 'Wallpaper', text: strings.SizeOptionExtraLarge }\n              ]}\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeSize(option)}\n            />\n            <Dropdown\n              className={styles.filterDropdown}\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\n              selectedKey={this.state.aspect}\n              options={[\n                { key: 'All', text: strings.LayoutOptionAll },\n                { key: 'Square', text: strings.LayoutOptionSquare },\n                { key: 'Wide', text: strings.LayoutOptionWide },\n                { key: 'Tall', text: strings.LayoutOptionTall },\n              ]}\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeLayout(option)}\n            />\n            <Dropdown\n              className={styles.filterDropdown}\n              onRenderPlaceHolder={(props: IDropdownProps) => this._renderFilterPlaceholder(props)}\n              selectedKey={license}\n              options={[\n                { key: 'All', text: strings.LicenseOptionAll },\n                { key: 'Any', text: strings.LicenseOptionAny }\n              ]}\n              onChanged={(option: IDropdownOption, index?: number) => this._handleChangeLicense(option)}\n            />\n          </div>\n        }\n      </div>);\n  }\n\n  /**\n   * Handles when a user changes the size drop down.\n   * Resubmits search query\n   */\n  private _handleChangeSize = (option: IDropdownOption) => {\n    this.setState({\n      size: option.key as ImageSize\n    }, () => this._getSearchResults());\n  }\n\n  /**\n   * Handles when user selects a new layout from the drop down.\n   * Resubmits search query.\n   */\n  private _handleChangeLayout = (option: IDropdownOption) => {\n    this.setState({\n      aspect: option.key as ImageAspect\n    }, () => this._getSearchResults());\n  }\n\n  /**\n   * Handles when a user changes the license from the drop down\n   * Resubits search query\n   */\n  private _handleChangeLicense = (option: IDropdownOption) => {\n    this.setState({\n      license: option.key as ImageLicense\n    }, () => this._getSearchResults());\n  }\n\n  /**\n   * Renders the drop down placeholders\n   */\n  private _renderFilterPlaceholder = (props: IDropdownProps): JSX.Element => {\n    // return <span>{props.placeholder}</span>;\n    return <span>Pick the value</span>;\n  }\n\n  /**\n   * Handles when user triggers search query\n   */\n  private _handleSearch = (newQuery?: string) => {\n    this.setState({\n      query: newQuery\n    }, () => this._getSearchResults());\n  }\n\n  /**\n   * Handles when user closes search pane\n   */\n  private _handleClose = () => {\n    this.props.onClose();\n  }\n\n  /**\n   * Handes when user saves selection\n   * Calls property pane file picker's save function\n   */\n  private _handleSave = () => {\n    this.props.onSave(this.state.filePickerResult);\n  }\n\n  /**\n   * Creates a reference to the list\n   */\n  private _linkElement = (e: any) => {\n    this._listElem = e;\n  }\n}\n"],"sourceRoot":"../../../../src"}