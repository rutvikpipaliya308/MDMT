{"version":3,"sources":["controls/filePicker/FilePicker.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/FilePicker.js","sourcesContent":["import * as React from 'react';\nimport { IFilePickerProps } from './IFilePickerProps';\nimport { IFilePickerState } from './IFilePickerState';\n\nimport { PrimaryButton, ActionButton } from 'office-ui-fabric-react/lib/components/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/components/Panel';\nimport { Label } from 'office-ui-fabric-react/lib/components/Label';\nimport { Nav, INavLink, INavLinkGroup } from 'office-ui-fabric-react/lib/Nav';\nimport { css } from \"@uifabric/utilities/lib/css\";\n\n// Localization\nimport * as strings from 'ControlStrings';\n\nimport LinkFilePickerTab from './LinkFilePickerTab/LinkFilePickerTab';\nimport UploadFilePickerTab from './UploadFilePickerTab/UploadFilePickerTab';\nimport SiteFilePickerTab from './SiteFilePickerTab/SiteFilePickerTab';\nimport WebSearchTab from './WebSearchTab/WebSearchTab';\nimport RecentFilesTab from './RecentFilesTab/RecentFilesTab';\n\nimport styles from './FilePicker.module.scss';\nimport { FileBrowserService } from '../../services/FileBrowserService';\nimport { OneDriveFilesTab } from './OneDriveFilesTab';\nimport { OneDriveService } from '../../services/OneDriveService';\nimport { OrgAssetsService } from '../../services/OrgAssetsService';\nimport { IFilePickerResult } from './FilePicker.types';\nimport { FilesSearchService } from '../../services/FilesSearchService';\n\nimport * as telemetry from '../../common/telemetry';\nimport { StockImages } from './StockImagesTab/StockImages';\n\nexport class FilePicker extends React.Component<IFilePickerProps, IFilePickerState> {\n  private fileBrowserService: FileBrowserService;\n  private oneDriveService: OneDriveService;\n  private orgAssetsService: OrgAssetsService;\n  private fileSearchService: FilesSearchService;\n\n  constructor(props: IFilePickerProps) {\n    super(props);\n\n    telemetry.track('ReactFilePicker', {});\n\n    // Initialize file browser services\n    this.fileBrowserService = new FileBrowserService(props.context, this.props.itemsCountQueryLimit);\n    this.oneDriveService = new OneDriveService(props.context, this.props.itemsCountQueryLimit);\n    this.orgAssetsService = new OrgAssetsService(props.context, this.props.itemsCountQueryLimit);\n    this.fileSearchService = new FilesSearchService(props.context, this.props.bingAPIKey);\n\n    this.state = {\n      panelOpen: false,\n      organisationAssetsEnabled: false,\n      showFullNav: true\n    };\n  }\n\n  public async componentDidMount() {\n    // Load information about Organisation Assets Library\n    let orgAssetsEnabled: boolean = false;\n    if (!this.props.hideOrganisationalAssetTab) {\n      const orgAssetsLibraries = await this.orgAssetsService.getSiteMediaLibraries();\n      orgAssetsEnabled = orgAssetsLibraries ? true : false;\n    }\n\n    this.setState({\n      organisationAssetsEnabled: orgAssetsEnabled,\n      selectedTab: this.getDefaultSelectedTabKey(this.props, orgAssetsEnabled)\n    });\n  }\n\n  public render(): JSX.Element {\n    // If no acceptable file type was passed, and we're expecting images, set the default image filter\n    const accepts: string[] = this.props.accepts;\n    const buttonClassName: string = this.props.buttonClassName ? this.props.buttonClassName : '';\n    const panelClassName: string = this.props.panelClassName ? this.props.panelClassName : '';\n\n    const linkTabProps = {\n      accepts: accepts,\n      context: this.props.context,\n      onClose: () => this._handleClosePanel(),\n      onSave: (value: IFilePickerResult) => { this._handleSave(value); }\n    };\n    const buttonProps = {\n      text: this.props.buttonLabel,\n      disabled: this.props.disabled,\n      onClick: this._handleOpenPanel,\n      className: `pnp__file-picker__button ${buttonClassName}`\n    };\n\n    return (\n      <div className={`pnp__file-picker`}>\n        {\n          this.props.label && <Label required={this.props.required}>{this.props.label}</Label>\n        }\n        {\n          this.props.buttonIcon ?\n            <ActionButton iconProps={{ iconName: this.props.buttonIcon }} {...buttonProps} /> :\n            <PrimaryButton {...buttonProps} />\n        }\n\n        <Panel isOpen={this.state.panelOpen}\n          isBlocking={true}\n          hasCloseButton={true}\n          className={`pnp__file-picker__panel ${styles.filePicker} ${panelClassName}`}\n          onDismiss={this._handleClosePanel}\n          type={PanelType.extraLarge}\n          isFooterAtBottom={true}\n          onRenderNavigation={() => { return undefined; }}\n          headerText={strings.FilePickerHeader}\n          isLightDismiss={true}\n          onRenderHeader={() => this._renderHeader()}\n        >\n\n          <div className={styles.nav}>\n            <Nav\n              groups={this._getNavPanelOptions()}\n              selectedKey={this.state.selectedTab}\n              onLinkClick={(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => this._handleLinkClick(ev, item)}\n            />\n          </div>\n          <div className={styles.tabsContainer}>\n            {\n              this.state.selectedTab === \"keyLink\" &&\n              <LinkFilePickerTab\n                fileSearchService={this.fileSearchService}\n                allowExternalTenantLinks={true}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyUpload\" &&\n              <UploadFilePickerTab\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keySite\" &&\n              <SiteFilePickerTab\n                fileBrowserService={this.fileBrowserService}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyOrgAssets\" &&\n              <SiteFilePickerTab\n                breadcrumbFirstNode={{\n                  isCurrentItem: true,\n                  text: strings.OrgAssetsTabLabel,\n                  key: \"keyOrgAssets\"\n                }}\n                fileBrowserService={this.orgAssetsService}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyWeb\" &&\n              <WebSearchTab\n                bingSearchService={this.fileSearchService}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyOneDrive\" &&\n              <OneDriveFilesTab\n                oneDriveService={this.oneDriveService}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyRecent\" &&\n              <RecentFilesTab\n                fileSearchService={this.fileSearchService}\n                {...linkTabProps}\n              />\n            }\n            {\n              this.state.selectedTab === \"keyStockImages\" &&\n              <StockImages\n                language={this.props.context.pageContext.cultureInfo.currentCultureName}\n                fileSearchService={this.fileSearchService}\n                {...linkTabProps}\n              />\n            }\n          </div>\n        </Panel>\n      </div >\n    );\n  }\n\n  /**\n   * Renders the panel header\n   */\n  private _renderHeader = (): JSX.Element => {\n    return <div className={\"ms-Panel-header\"}><p className={css(\"ms-Panel-headerText\", styles.header)} role=\"heading\">{strings.FilePickerHeader}</p></div>;\n  }\n\n  /**\n   * Open the panel\n   */\n  private _handleOpenPanel = () => {\n    this.setState({\n      panelOpen: true,\n      selectedTab: this.getDefaultSelectedTabKey(this.props, this.state.organisationAssetsEnabled)\n    });\n  }\n\n  /**\n   * Closes the panel\n   */\n  private _handleClosePanel = () => {\n    this.setState({\n      panelOpen: false\n    });\n  }\n\n  /**\n   * On save action\n   */\n  private _handleSave = (filePickerResult: IFilePickerResult) => {\n    this.props.onSave(filePickerResult);\n    this.setState({\n      panelOpen: false\n    });\n  }\n\n  /**\n   * Changes the selected tab when a link is selected\n   */\n  private _handleLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    this.setState({ selectedTab: item.key });\n  }\n\n  /**\n   * Prepares navigation panel options\n   */\n  private _getNavPanelOptions = () => {\n    const addUrl = this.props.storeLastActiveTab !== false;\n    let links = [];\n\n    if (!this.props.hideRecentTab) {\n      links.push({\n        name: strings.RecentLinkLabel,\n        url: addUrl ? '#recent' : undefined,\n        icon: 'Recent',\n        key: 'keyRecent',\n      });\n    }\n    if (!this.props.hideStockImages) {\n      links.push({\n        name: strings.StockImagesLinkLabel,\n        url: addUrl ? '#stockImages' : undefined,\n        key: 'keyStockImages',\n        icon: 'ImageSearch',\n      });\n    }\n    if (this.props.bingAPIKey && !this.props.hideWebSearchTab) {\n      links.push({\n        name: strings.WebSearchLinkLabel,\n        url: addUrl ? '#search' : undefined,\n        key: 'keyWeb',\n        icon: 'Search',\n      });\n    }\n    if (!this.props.hideOrganisationalAssetTab && this.state.organisationAssetsEnabled) {\n      links.push({\n        name: 'Your organisation',\n        url: addUrl ? '#orgAssets' : undefined,\n        icon: 'FabricFolderConfirm',\n        key: 'keyOrgAssets',\n      });\n    }\n    if (!this.props.hideOneDriveTab) {\n      links.push({\n        name: \"OneDrive\",\n        url: addUrl ? '#onedrive' : undefined,\n        key: 'keyOneDrive',\n        icon: 'OneDrive',\n      });\n    }\n    if (!this.props.hideSiteFilesTab) {\n      links.push({\n        name: strings.SiteLinkLabel,\n        url: addUrl ? '#globe' : undefined,\n        key: 'keySite',\n        icon: 'Globe',\n      });\n    }\n    if (!this.props.hideLocalUploadTab) {\n      links.push({\n        name: strings.UploadLinkLabel,\n        url: addUrl ? '#upload' : undefined,\n        key: 'keyUpload',\n        icon: 'System'\n      });\n    }\n    if (!this.props.hideLinkUploadTab) {\n      links.push({\n        name: strings.FromLinkLinkLabel,\n        url: addUrl ? '#link' : undefined,\n        key: 'keyLink',\n        icon: 'Link'\n      });\n    }\n\n    let groups: INavLinkGroup[] = [{ links }];\n    return groups;\n  }\n\n  private getDefaultSelectedTabKey = (props: IFilePickerProps, orgAssetsEnabled: boolean): string => {\n    if (!props.hideRecentTab) {\n      return 'keyRecent';\n    }\n    if (!props.hideStockImages) {\n      return 'keyStockImages';\n    }\n    if (props.bingAPIKey && !props.hideWebSearchTab) {\n      return 'keyWeb';\n    }\n    if (!props.hideOrganisationalAssetTab && orgAssetsEnabled) {\n      return 'keyOrgAssets';\n    }\n    if (!props.hideOneDriveTab) {\n      return 'keyOneDrive';\n    }\n    if (!props.hideSiteFilesTab) {\n      return 'keySite';\n    }\n    if (!props.hideLocalUploadTab) {\n      return 'keyUpload';\n    }\n    if (!props.hideLinkUploadTab) {\n      return 'keyLink';\n    }\n  }\n\n}\n"],"sourceRoot":"../../../src"}