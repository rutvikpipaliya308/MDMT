{"version":3,"sources":["controls/filePicker/SiteFilePickerTab/SiteFilePickerTab.tsx"],"names":[],"mappings":"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","file":"controls/filePicker/SiteFilePickerTab/SiteFilePickerTab.js","sourcesContent":["import * as React from 'react';\nimport { findIndex } from '@microsoft/sp-lodash-subset';\nimport { ISiteFilePickerTabProps, ISiteFilePickerTabState } from '.';\nimport { DocumentLibraryBrowser, FileBrowser } from '../controls';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { IFile, ILibrary } from '../../../services/FileBrowserService.types';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { IFilePickerResult, FilePickerBreadcrumbItem } from '../FilePicker.types';\n\nimport styles from './SiteFilePickerTab.module.scss';\nimport * as strings from 'ControlStrings';\n\nexport default class SiteFilePickerTab extends React.Component<ISiteFilePickerTabProps, ISiteFilePickerTabState> {\n  constructor(props: ISiteFilePickerTabProps) {\n    super(props);\n\n    // Add current site to the breadcrumb or the provided node\n    const breadcrumbSiteNode: FilePickerBreadcrumbItem = this.props.breadcrumbFirstNode ? this.props. breadcrumbFirstNode : {\n      isCurrentItem: true,\n      text: props.context.pageContext.web.title,\n      key: props.context.pageContext.web.id.toString()\n    };\n    breadcrumbSiteNode.onClick = () => { this.onBreadcrumpItemClick(breadcrumbSiteNode); };\n\n    this.state = {\n      filePickerResult: null,\n      libraryAbsolutePath: undefined,\n      libraryTitle: strings.DocumentLibraries,\n      libraryPath: undefined,\n      folderName: strings.DocumentLibraries,\n      breadcrumbItems: [breadcrumbSiteNode]\n    };\n  }\n\n  public render(): React.ReactElement<ISiteFilePickerTabProps> {\n    return (\n      <div className={styles.tabContainer}>\n        <div className={styles.tabHeaderContainer}>\n          <Breadcrumb items={this.state.breadcrumbItems} onRenderItem={this.renderBreadcrumbItem} className={styles.breadcrumbNav}/>\n        </div>\n        <div className={styles.tabFiles}>\n          {this.state.libraryAbsolutePath === undefined &&\n            <DocumentLibraryBrowser\n              fileBrowserService={this.props.fileBrowserService}\n              onOpenLibrary={(selectedLibrary: ILibrary) => this._handleOpenLibrary(selectedLibrary, true)} />}\n          {this.state.libraryAbsolutePath !== undefined &&\n            <FileBrowser\n              onChange={(filePickerResult: IFilePickerResult) => this._handleSelectionChange(filePickerResult)}\n              onOpenFolder={(folder: IFile) => this._handleOpenFolder(folder, true)}\n              fileBrowserService={this.props.fileBrowserService}\n              libraryName={this.state.libraryTitle}\n              folderPath={this.state.libraryPath}\n              accepts={this.props.accepts} />}\n        </div>\n        <div className={styles.actionButtonsContainer}>\n          <div className={styles.actionButtons}>\n            <PrimaryButton\n              disabled={!this.state.filePickerResult}\n              onClick={() => this._handleSave()} className={styles.actionButton}>{strings.OpenButtonLabel}</PrimaryButton>\n            <DefaultButton onClick={() => this._handleClose()} className={styles.actionButton}>{strings.CancelButtonLabel}</DefaultButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderBreadcrumbItem = (item: IBreadcrumbItem): JSX.Element => {\n    return (\n      <Link href={item.href} onClick={item.onClick} key={item.key} className={`ms-Link ms-Breadcrumb-itemLink ${styles.breadcrumbNavItem}`}>{item.text}</Link>\n    );\n  }\n\n  /**\n   * Handles breadcrump item click\n   */\n  private onBreadcrumpItemClick = (node: FilePickerBreadcrumbItem) => {\n    let { breadcrumbItems } = this.state;\n    let breadcrumbClickedItemIndx = 0;\n    // Site node clicked\n    if (node.libraryData == null && node.folderData == null) {\n      this.setState({\n        libraryAbsolutePath: undefined,\n        libraryPath: undefined,\n        folderName: undefined\n      });\n    }\n    // Check if it is folder item\n    else if (node.folderData != null) {\n      this._handleOpenFolder(node.folderData, false);\n      // select which node has been clicked\n      breadcrumbClickedItemIndx = findIndex(breadcrumbItems, item => item.folderData && item.folderData.absoluteUrl === node.key);\n    }\n    // Check if it is library node\n    else if (node.libraryData != null) {\n      this._handleOpenLibrary(node.libraryData, false);\n      // select which node has been clicked\n      breadcrumbClickedItemIndx = findIndex(breadcrumbItems, item => item.libraryData && item.libraryData.serverRelativeUrl === node.key);\n    }\n    // Trim nodes array\n    breadcrumbItems = breadcrumbItems.slice(0, breadcrumbClickedItemIndx + 1);\n    // Set new current node\n    breadcrumbItems[breadcrumbItems.length - 1].isCurrentItem = true;\n\n    this.setState({\n      breadcrumbItems,\n      filePickerResult: undefined\n    });\n  }\n\n  /**\n   * Is called when user selects a different file\n   */\n  private _handleSelectionChange = (filePickerResult: IFilePickerResult) => {\n    if (filePickerResult) {\n      filePickerResult.downloadFileContent = () => { return this.props.fileBrowserService.downloadSPFileContent(filePickerResult.fileAbsoluteUrl, filePickerResult.fileName); };\n    }\n    // this.props.fileBrowserService\n    this.setState({\n      filePickerResult\n    });\n  }\n\n  /**\n   * Called when user saves\n   */\n  private _handleSave = () => {\n    this.props.onSave(this.state.filePickerResult);\n  }\n\n  /**\n   * Called when user closes tab\n   */\n  private _handleClose = () => {\n    this.props.onClose();\n  }\n\n  /**\n   * Triggered when user opens a file folder\n   */\n  private _handleOpenFolder = (folder: IFile, addBreadcrumbNode: boolean) => {\n    const { breadcrumbItems } = this.state;\n\n    if (addBreadcrumbNode) {\n      breadcrumbItems.map(item => item.isCurrentItem = false);\n      const breadcrumbNode: FilePickerBreadcrumbItem = {\n        folderData: folder,\n        isCurrentItem: true,\n        text: folder.name,\n        key: folder.absoluteUrl\n      };\n      breadcrumbNode.onClick = () => { this.onBreadcrumpItemClick(breadcrumbNode); };\n      breadcrumbItems.push(breadcrumbNode);\n    }\n\n    this.setState({\n      filePickerResult: null,\n      libraryPath: folder.serverRelativeUrl,\n      folderName: folder.name,\n      libraryAbsolutePath: folder.absoluteUrl,\n      breadcrumbItems\n    });\n  }\n\n  /**\n   * Triggered when user opens a top-level document library\n   */\n  private _handleOpenLibrary = (library: ILibrary, addBreadcrumbNode: boolean) => {\n    const { breadcrumbItems } = this.state;\n    if (addBreadcrumbNode) {\n      breadcrumbItems.map(item => item.isCurrentItem = false);\n      const breadcrumbNode: FilePickerBreadcrumbItem = {\n        libraryData: library,\n        isCurrentItem: true,\n        text: library.title,\n        key: library.serverRelativeUrl\n      };\n      breadcrumbNode.onClick = () => { this.onBreadcrumpItemClick(breadcrumbNode); };\n      breadcrumbItems.push(breadcrumbNode);\n    }\n    this.setState({\n      libraryAbsolutePath: library.absoluteUrl,\n      libraryTitle: library.title,\n      libraryPath: library.serverRelativeUrl,\n      breadcrumbItems\n    });\n  }\n}\n"],"sourceRoot":"../../../../src"}