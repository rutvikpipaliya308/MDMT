{"version":3,"sources":["controls/fieldCollectionData/collectionDataViewer/CollectionDataViewer.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,sFAAwD;AAExD,4DAA2D;AAC3D,uEAA4F;AAC5F,mEAAkE;AAClE,wCAA0C;AAC1C,gEAAoF;AACpF,+CAA8C;AAC9C,kEAAiE;AACjE,8DAAkD;AAElD;IAA0C,wCAAuE;IAG/G,8BAAY,KAAiC;QAA7C,YACE,kBAAM,KAAK,CAAC,SAQb;QAXgB,cAAQ,GAAG,SAAS,CAAC;QAkCtC;;WAEG;QACK,aAAO,GAAG,UAAC,IAAS;YAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,sBAAI,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;YACD,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAqC;gBAClD,IAAI,SAAS,GAAO,SAAS,CAAC,SAAS,SAAE,IAAI,EAAC,CAAC;gBAC/C,SAAS,GAAG,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAC/C,IAAM,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;gBACjD,IAAM,WAAW,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;gBACpD,MAAM,CAAC;oBACL,SAAS,WAAA;oBACT,cAAc,EAAE,IAAI;oBACpB,WAAW,aAAA;iBACZ,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,gBAAU,GAAG,UAAC,GAAW,EAAE,IAAS;YAC1C,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAqC;gBAC1C,IAAA,+BAAS,CAAe;gBAChC,+BAA+B;gBAC/B,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC;oBACL,SAAS,WAAA;oBACT,WAAW,EAAE,SAAS,CAAC,WAAW;iBACnC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,gBAAU,GAAG,UAAC,GAAW;YAC/B,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAqC;gBAC5C,IAAA,+BAAS,CAAe;gBAC9B,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAEzB,0BAA0B;gBAC1B,SAAS,GAAG,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAC/C,yBAAyB;gBAEzB,IAAM,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;gBACjD,IAAM,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,UAAU,GAAG,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC;gBAC9F,MAAM,CAAC;oBACL,SAAS,EAAE,yBAAM,CAAC,SAAS,EAAE,KAAI,CAAC,QAAQ,CAAC;oBAC3C,WAAW,aAAA;iBACZ,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAID;;WAEG;QACK,kBAAY,GAAG,UAAC,GAAW,EAAE,OAAgB;YACnD,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAqC;gBAC1C,IAAA,iCAAU,CAAe;gBACjC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;gBAC1B,MAAM,CAAC;oBACL,UAAU,EAAE,SAAS,CAAC,UAAU;iBACjC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAkBD;;WAEG;QACK,mBAAa,GAAG,UAAC,IAAS;YAChC,KAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,gBAAU,GAAG;YACnB,iCAAiC;YACjC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,KAAK,CAAC,OAAO,CAAK,KAAI,CAAC,KAAK,CAAC,SAAS,SAAE,KAAI,CAAC,KAAK,CAAC,cAAc,GAAE,CAAC;YAC3E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAA;QAgCD;;WAEG;QACK,qBAAe,GAAG,UAAC,MAAc,EAAE,MAAc;YACvD,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAqC;gBAC1C,IAAA,+BAAS,CAAe;gBAChC,IAAI,eAAe,GAAG,4BAAS,CAAC,SAAS,CAAC,CAAC;gBAC3C,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,EAAE,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;gBACvE,eAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;gBAC3D,eAAe,GAAG,yBAAM,CAAC,eAAe,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAEzD,MAAM,CAAC;oBACL,SAAS,EAAE,eAAe;iBAC3B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,YAAM,GAAG;YACf,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAA;QAED;;WAEG;QACK,cAAQ,GAAG;YACjB,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAA;QAEO,mBAAa,GAAG,UAAC,KAAK;YAC5B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC;YACX,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3D,CAAC,CAAA;QAEO,kBAAY,GAAG,UAAC,gBAAuB,EAAE,YAAmB;YAA5C,iCAAA,EAAA,uBAAuB;YAAE,6BAAA,EAAA,mBAAmB;YAC5D,IAAA,gBAAuC,EAArC,wBAAS,EAAE,4BAAW,CAAgB;YAE9C,IAAM,KAAK,GAAG,CAAC,YAAY,GAAG,SAAS,GAAG,YAAY,CAAC;YACvD,IAAM,SAAS,GAAG,CAAC,gBAAgB,GAAG,WAAW,GAAG,gBAAgB,CAAC;YAErE,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAED,IAAM,UAAU,GAAG,KAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAC/D,IAAM,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAE5D,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC3C,CAAC,CAAA;QAEO,0BAAoB,GAAG,UAAC,WAAW,EAAE,SAAS;YAC5C,IAAA,uCAAY,CAAgB;YAEpC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YACD,IAAM,gBAAgB,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,gBAAgB,IAAI,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,CAAC,CAAC;YACX,CAAC;YAED,IAAM,iBAAiB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;YAC3D,MAAM,CAAC,iBAAiB,CAAC;QAC3B,CAAC,CAAA;QACO,yBAAmB,GAAG,UAAC,WAAW,EAAE,SAAS;YAC3C,IAAA,uCAAY,CAAgB;YAEpC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,IAAM,gBAAgB,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAC1B,CAAC;YAED,IAAM,gBAAgB,GAAG,WAAW,GAAG,YAAY,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,WAAW,GAAG,YAAY,CAAC;YACvH,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC,CAAA;QAEO,2BAAqB,GAAG,UAAC,IAAI,EAAE,GAAG,EAAE,QAAQ;YAClD,MAAM,CAAC,oBAAC,uCAAkB,IACxB,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,EACzB,KAAK,EAAE,GAAG,EACV,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,QAAQ,CAAC,MAAM,EAC3B,cAAc,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,EACxC,mBAAmB,EAAE,KAAI,CAAC,KAAK,CAAC,mBAAmB,EACnD,WAAW,EAAE,KAAI,CAAC,UAAU,EAC5B,WAAW,EAAE,KAAI,CAAC,UAAU,EAC5B,WAAW,EAAE,KAAI,CAAC,YAAY,EAC9B,UAAU,EAAE,KAAI,CAAC,eAAe,GAAI,CAAC;QACzC,CAAC,CAAA;QAEO,qBAAe,GAAG;YACxB,IAAM,eAAe,GAAG,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;YACjF,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC,CAAA;QAEO,2BAAqB,GAAG,UAAC,KAAY;YACnC,IAAA,+CAAgB,CAAgB;YAChC,IAAA,uCAAY,CAAgB;YAEpC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YACD,EAAE,CAAC,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YACD,EAAE,CAAC,CAAC,0BAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAA;QAEO,sBAAgB,GAAG,UAAC,KAAY;YAC9B,IAAA,+CAAgB,CAAgB;YAChC,IAAA,uCAAY,CAAgB;YAEpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,IAAO,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClF,CAAC,CAAA;QArSC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,EAAE;YACb,cAAc,EAAE,IAAI;YACpB,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,CAAC;SACf,CAAC;;IACJ,CAAC;IAED;;OAEG;IACI,gDAAiB,GAAxB;QAAA,iBAgBC;QAfC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,yBAAM,CAAC,4BAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QAC3F,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG;YAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YAChC,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,GAAG,sBAAI,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,0BAA0B;QAC1B,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,yBAAM,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAyED;;OAEG;IACK,4CAAa,GAArB;QACU,IAAA,kCAAU,CAAgB;QAClC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACrC,GAAG,CAAC,CAAc,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG,aAAA;gBACZ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;aACF;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAuBD;;;;;;OAMG;IACK,yCAAU,GAAlB,UAAmB,SAAgB,EAAE,MAAc,EAAE,MAAc;QACjE,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,IAAM,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACnB,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACK,iDAAkB,GAA1B,UAA2B,SAAgB;QAA3C,iBAMC;QALC,wBAAwB;QACxB,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,OAAO;YACjC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAkID;;OAEG;IACI,qCAAM,GAAb;QAAA,iBA8EC;QA7EK,IAAA,eAAuC,EAArC,4BAAW,EAAE,wBAAS,CAAgB;QAE5C,IAAM,eAAe,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAE/C,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1C,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAChD,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE3D,MAAM,CAAC,CACL;YAEI,IAAI,CAAC,KAAK,CAAC,gBAAgB;gBAC3B,oBAAC,qBAAS,IAAC,SAAS,EAAE,UAAC,QAAQ,IAAO,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,oBAAoB,EAAE,SAAS,EAAC,wCAAwC,GAAE;YAErM,6BAAK,SAAS,EAAE,uCAAqC,yCAAM,CAAC,KAAK,UAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,EAAE,CAAE;gBACpG,6BAAK,SAAS,EAAE,4CAA0C,yCAAM,CAAC,QAAQ,SAAI,yCAAM,CAAC,SAAW;oBAE3F,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAC1B,8BAAM,SAAS,EAAE,4CAA0C,yCAAM,CAAC,SAAW,GAAS,CACvF;oBAGD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CACzB,8BAAM,GAAG,EAAE,gBAAc,CAAC,CAAC,EAAI,EAAE,SAAS,EAAE,4CAA0C,yCAAM,CAAC,SAAW;wBAAG,CAAC,CAAC,KAAK;;wBAAG,CAAC,CAAC,QAAQ,IAAI,oBAAC,WAAI,IAAC,SAAS,EAAE,yCAAM,CAAC,QAAQ,EAAE,QAAQ,EAAC,UAAU,GAAG,CAAQ,CACpM,EAF0B,CAE1B,CAAC;oBAEJ,8BAAM,SAAS,EAAE,4CAA0C,yCAAM,CAAC,SAAW,GAAS;oBACtF,8BAAM,SAAS,EAAE,4CAA0C,yCAAM,CAAC,SAAW,GAAS,CAClF;gBAEJ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;oBACzD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,EAAE,QAAQ;wBAC3C,IAAM,YAAY,GAAG,4BAAS,CAAC,QAAQ,EAAE,UAAC,CAAM,IAAO,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/F,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;4BACtB,MAAM,CAAC,KAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;wBACzD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,CAAC,IAAI,CAAC;wBACd,CAAC;oBACH,CAAC,CAAC;gBAIF,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,CACjC,oBAAC,uCAAkB,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAC3C,KAAK,EAAE,IAAI,EACX,IAAI,EAAE,IAAI,EACV,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EACxC,UAAU,EAAE,IAAI,EAChB,QAAQ,EAAE,IAAI,CAAC,OAAO,EACtB,cAAc,EAAE,IAAI,CAAC,aAAa,GAAI,CACzC,CAGC;YAGJ,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;gBAC1E,6BAAK,SAAS,EAAE,wCAAwC;oBACtD,oBAAC,uBAAU,IAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAC,IAAY,IAAO,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAI,CAClI;YAIN,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAC9D,2BAAG,SAAS,EAAE,oDAAkD,yCAAM,CAAC,gBAAkB,IAAG,OAAO,CAAC,wBAAwB,CAAK,CAClI;YAGH,6BAAK,SAAS,EAAE,yCAAuC,yCAAM,CAAC,YAAc;gBACzE,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,oBAAC,sBAAa,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,OAAO,CAAC,+BAA+B,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,SAAS,EAAC,yCAAyC,GAAG;gBAC7O,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,oBAAC,sBAAa,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,OAAO,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,SAAS,EAAC,0CAA0C,GAAG;gBACtN,oBAAC,sBAAa,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,OAAO,CAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAC,4CAA4C,GAAG,CAC1J,CACF,CACP,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CA/XA,AA+XC,CA/XyC,KAAK,CAAC,SAAS,GA+XxD;AA/XY,oDAAoB","file":"controls/fieldCollectionData/collectionDataViewer/CollectionDataViewer.js","sourcesContent":["import * as React from 'react';\nimport styles from '../FieldCollectionData.module.scss';\nimport { ICollectionDataViewerProps, ICollectionDataViewerState } from '.';\nimport { CollectionDataItem } from '../collectionDataItem';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\nimport { Icon } from 'office-ui-fabric-react/lib/components/Icon';\nimport * as strings from 'ControlStrings';\nimport { cloneDeep, sortBy, isEmpty, findIndex } from '@microsoft/sp-lodash-subset';\nimport { Pagination } from '../../pagination';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Guid } from '@microsoft/sp-core-library';\n\nexport class CollectionDataViewer extends React.Component<ICollectionDataViewerProps, ICollectionDataViewerState> {\n  private readonly SORT_IDX = \"sortIdx\";\n\n  constructor(props: ICollectionDataViewerProps) {\n    super(props);\n\n    this.state = {\n      crntItems: [],\n      inCreationItem: null,\n      validation: {},\n      currentPage: 1\n    };\n  }\n\n  /**\n   * componentDidMount lifecycle hook\n   */\n  public componentDidMount(): void {\n    let crntItems = this.props.value ? sortBy(cloneDeep(this.props.value), this.SORT_IDX) : [];\n    crntItems = crntItems.map((item, idx) => {\n      if (!item[this.SORT_IDX]) {\n        item[this.SORT_IDX] = idx + 1;\n      }\n      if (!item.uniqueId) {\n        item.uniqueId = Guid.newGuid();\n      }\n      return item;\n    });\n    // Update the sort propety\n    crntItems = this.updateSortProperty(crntItems);\n    this.setState({\n      crntItems: sortBy(crntItems, this.SORT_IDX)\n    });\n  }\n\n  /**\n   * Add a new item to the collection\n   */\n  private addItem = (item: any) => {\n    if (!item.uniqueId) {\n      item.uniqueId = Guid.newGuid();\n    }\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => {\n      let crntItems = [...prevState.crntItems, item];\n      crntItems = this.updateSortProperty(crntItems);\n      const pagesCount = this.getPagesCount(crntItems);\n      const currentPage = pagesCount < 1 ? 1 : pagesCount;\n      return {\n        crntItems,\n        inCreationItem: null,\n        currentPage\n      };\n    });\n  }\n\n  /**\n   * Remove an item from the collection\n   */\n  private updateItem = (idx: number, item: any) => {\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => {\n      const { crntItems } = prevState;\n      // Update the item in the array\n      crntItems[idx] = item;\n      return {\n        crntItems,\n        currentPage: prevState.currentPage\n      };\n    });\n  }\n\n  /**\n   * Remove an item from the collection\n   */\n  private deleteItem = (idx: number) => {\n    this.setState((prevState: ICollectionDataViewerState): ICollectionDataViewerState => {\n      let { crntItems } = prevState;\n      crntItems.splice(idx, 1);\n\n      // Update the sort propety\n      crntItems = this.updateSortProperty(crntItems);\n      // Calculate current page\n\n      const pagesCount = this.getPagesCount(crntItems);\n      const currentPage = this.state.currentPage > pagesCount ? pagesCount : this.state.currentPage;\n      return {\n        crntItems: sortBy(crntItems, this.SORT_IDX),\n        currentPage\n      };\n    });\n  }\n\n\n\n  /**\n   * Validate every item\n   */\n  private validateItem = (idx: number, isValid: boolean) => {\n    this.setState((prevState: ICollectionDataViewerState) => {\n      const { validation } = prevState;\n      validation[idx] = isValid;\n      return {\n        validation: prevState.validation\n      };\n    });\n  }\n\n  /**\n   * Check if all items are valid\n   */\n  private allItemsValid() {\n    const { validation } = this.state;\n    if (validation) {\n      const keys = Object.keys(validation);\n      for (const key of keys) {\n        if (!validation[key]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Currently in creation\n   */\n  private addInCreation = (item: any) => {\n    this.setState({\n      inCreationItem: item\n    });\n  }\n\n  /**\n   * Add the item and save the form\n   */\n  private addAndSave = () => {\n    // Check if the item is not empty\n    if (this.state.inCreationItem) {\n      this.props.fOnSave([...this.state.crntItems, this.state.inCreationItem]);\n    } else {\n      this.onSave();\n    }\n  }\n\n  /**\n   * Move an item in the array\n   *\n   * @param crntItems\n   * @param oldIdx\n   * @param newIdx\n   */\n  private moveItemTo(crntItems: any[], oldIdx: number, newIdx: number): any[] {\n    if (newIdx > -1 && newIdx < crntItems.length) {\n      const removedElement = crntItems.splice(oldIdx, 1)[0];\n      if (removedElement) {\n        crntItems.splice(newIdx, 0, removedElement);\n      }\n    }\n    return crntItems;\n  }\n\n  /**\n   * Update the sort property\n   *\n   * @param crntItems\n   */\n  private updateSortProperty(crntItems: any[]): any[] {\n    // Update the sort order\n    return crntItems.map((item, itemIdx) => {\n      item[this.SORT_IDX] = itemIdx + 1;\n      return item;\n    });\n  }\n\n  /**\n   * Update the sort order\n   */\n  private updateSortOrder = (oldIdx: number, newIdx: number) => {\n    this.setState((prevState: ICollectionDataViewerState) => {\n      const { crntItems } = prevState;\n      let newOrderedItems = cloneDeep(crntItems);\n      newOrderedItems = this.moveItemTo(newOrderedItems, oldIdx, newIdx - 1);\n      newOrderedItems = this.updateSortProperty(newOrderedItems);\n      newOrderedItems = sortBy(newOrderedItems, this.SORT_IDX);\n\n      return {\n        crntItems: newOrderedItems\n      };\n    });\n  }\n\n  /**\n   * Save the collection data\n   */\n  private onSave = () => {\n    this.props.fOnSave(this.state.crntItems);\n  }\n\n  /**\n   * Cancel\n   */\n  private onCancel = () => {\n    this.props.fOnClose();\n  }\n\n  private getPagesCount = (items): number => {\n    if (!this.isPagingEnabled()) {\n      return 1;\n    }\n\n    return Math.ceil(items.length / this.props.itemsPerPage);\n  }\n\n  private getPageItems = (currentPageIndex = null, currentItems = null) => {\n    const { crntItems, currentPage } = this.state;\n\n    const items = !currentItems ? crntItems : currentItems;\n    const pageIndex = !currentPageIndex ? currentPage : currentPageIndex;\n\n    if (!this.isPagingEnabled || !items) {\n      return items;\n    }\n\n    const startIndex = this.getFirstElementIndex(pageIndex, items);\n    const endIndex = this.getLastElementIndex(pageIndex, items);\n\n    return items.slice(startIndex, endIndex);\n  }\n\n  private getFirstElementIndex = (currentPage, crntItems) => {\n    const { itemsPerPage } = this.props;\n\n    if (!crntItems) {\n      return null;\n    }\n    const isPginingEnabled = this.isPagingEnabled();\n    if (!isPginingEnabled || currentPage <= 1) {\n      return 0;\n    }\n\n    const firstElementIndex = (currentPage - 1) * itemsPerPage;\n    return firstElementIndex;\n  }\n  private getLastElementIndex = (currentPage, crntItems) => {\n    const { itemsPerPage } = this.props;\n\n    if (!crntItems) {\n      return null;\n    }\n\n    const isPginingEnabled = this.isPagingEnabled();\n    if (!isPginingEnabled) {\n      return crntItems.length;\n    }\n\n    const lastElementIndex = currentPage * itemsPerPage > crntItems.length ? crntItems.length : currentPage * itemsPerPage;\n    return lastElementIndex;\n  }\n\n  private getCollectionDataItem = (item, idx, allItems) => {\n    return <CollectionDataItem\n      key={item.uniqueId}\n      fields={this.props.fields}\n      index={idx}\n      item={item}\n      totalItems={allItems.length}\n      sortingEnabled={this.props.enableSorting}\n      disableItemDeletion={this.props.disableItemDeletion}\n      fUpdateItem={this.updateItem}\n      fDeleteItem={this.deleteItem}\n      fValidation={this.validateItem}\n      fOnSorting={this.updateSortOrder} />;\n  }\n\n  private isPagingEnabled = (): boolean => {\n    const isPagingEnabled = !!this.props.itemsPerPage && this.props.itemsPerPage > 0;\n    return isPagingEnabled;\n  }\n\n  private executeItemsFiltering = (items: any[]) => {\n    const { executeFiltering } = this.props;\n    const { searchFilter } = this.state;\n\n    if (!items || items.length <= 0) {\n      return false;\n    }\n    if (executeFiltering == null) {\n      return false;\n    }\n    if (isEmpty(searchFilter)) {\n      return false;\n    }\n    return true;\n  }\n\n  private getFilteredItems = (items: any[]) => {\n    const { executeFiltering } = this.props;\n    const { searchFilter } = this.state;\n\n    return items.filter((item) => { return executeFiltering(searchFilter, item); });\n  }\n\n  /**\n   * Default React render\n   */\n  public render(): React.ReactElement<ICollectionDataViewerProps> {\n    let { currentPage, crntItems } = this.state;\n\n    const isPagingEnabled = this.isPagingEnabled();\n\n    if (this.executeItemsFiltering(crntItems)) {\n      crntItems = this.getFilteredItems(crntItems);\n    }\n    const pageCount = this.getPagesCount(crntItems);\n    const elements = this.getPageItems(currentPage, crntItems);\n\n    return (\n      <div>\n        {\n          this.props.executeFiltering &&\n          <TextField onChanged={(newValue) => { this.setState({ searchFilter: newValue, currentPage: 1 }); }} placeholder={strings.CollectionDataSearch} className=\"FieldCollectionData__panel__search-box\"/>\n        }\n        <div className={`FieldCollectionData__panel__table ${styles.table} ${this.props.tableClassName || \"\"}`}>\n          <div className={`FieldCollectionData__panel__table-head ${styles.tableRow} ${styles.tableHead}`}>\n            {\n              this.props.enableSorting && (\n                <span className={`FieldCollectionData__panel__table-cell ${styles.tableCell}`}></span>\n              )\n            }\n            {\n              this.props.fields.map(f => (\n                <span key={`dataviewer-${f.id}`} className={`FieldCollectionData__panel__table-cell ${styles.tableCell}`}>{f.title} {f.required && <Icon className={styles.required} iconName=\"Asterisk\" />}</span>\n              ))\n            }\n            <span className={`FieldCollectionData__panel__table-cell ${styles.tableCell}`}></span>\n            <span className={`FieldCollectionData__panel__table-cell ${styles.tableCell}`}></span>\n          </div>\n          {\n            (this.state.crntItems && this.state.crntItems.length > 0) &&\n            this.state.crntItems.map((item, idx, allItems) => {\n              const elementIndex = findIndex(elements, (x: any) => { return x.uniqueId === item.uniqueId; });\n              if (elementIndex >= 0) {\n                return this.getCollectionDataItem(item, idx, allItems);\n              } else {\n                return null;\n              }\n            })\n          }\n\n          {\n            !this.props.disableItemCreation && (\n              <CollectionDataItem fields={this.props.fields}\n                index={null}\n                item={null}\n                sortingEnabled={this.props.enableSorting}\n                totalItems={null}\n                fAddItem={this.addItem}\n                fAddInCreation={this.addInCreation} />\n            )\n          }\n\n        </div>\n\n        {\n          isPagingEnabled && this.state.crntItems && this.state.crntItems.length > 0 &&\n          <div className={`FieldCollectionData__panel__pagination`}>\n            <Pagination currentPage={currentPage} totalPages={pageCount} onChange={(page: number) => { this.setState({ currentPage: page }); }} />\n          </div>\n        }\n\n        {\n          (!this.state.crntItems || this.state.crntItems.length === 0) && (\n            <p className={`FieldCollectionData__panel__no-collection-data ${styles.noCollectionData}`}>{strings.CollectionDataEmptyValue}</p>\n          )\n        }\n\n        <div className={`FieldCollectionData__panel__actions ${styles.panelActions}`}>\n          {this.state.inCreationItem && <PrimaryButton text={this.props.saveAndAddBtnLabel || strings.CollectionSaveAndAddButtonLabel} onClick={this.addAndSave} disabled={!this.allItemsValid()} className=\"FieldCollectionData__panel__action__add\" />}\n          {!this.state.inCreationItem && <PrimaryButton text={this.props.saveBtnLabel || strings.SaveButtonLabel} onClick={this.onSave} disabled={!this.allItemsValid()} className=\"FieldCollectionData__panel__action__save\" />}\n          <DefaultButton text={this.props.cancelBtnLabel || strings.CancelButtonLabel} onClick={this.onCancel} className=\"FieldCollectionData__panel__action__cancel\" />\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../src"}