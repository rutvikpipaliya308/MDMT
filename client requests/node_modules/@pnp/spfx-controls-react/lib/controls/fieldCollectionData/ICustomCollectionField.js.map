{"version":3,"sources":["controls/fieldCollectionData/ICustomCollectionField.ts"],"names":[],"mappings":";;AA4DA,IAAY,yBAQX;AARD,WAAY,yBAAyB;IACnC,6EAAU,CAAA;IACV,6EAAM,CAAA;IACN,+EAAO,CAAA;IACP,iFAAQ,CAAA;IACR,qFAAU,CAAA;IACV,uEAAG,CAAA;IACH,6EAAM,CAAA;AACR,CAAC,EARW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAQpC","file":"controls/fieldCollectionData/ICustomCollectionField.js","sourcesContent":["import { IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { IRenderFunction } from '@uifabric/utilities/lib/IRenderFunction';\nimport { ISelectableOption } from 'office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.types';\n\nexport interface ICustomCollectionField {\n  /**\n   * ID of the field.\n   */\n  id: string;\n  /**\n   * Title of the field. This will be used for the label in the table.\n   */\n  title: string;\n  /**\n   * Specifies the type of field to render.\n   */\n  type: CustomCollectionFieldType;\n  /**\n   * Allows you to specify if a field is disabled for editing\n   */\n  disableEdit?: boolean;\n  /**\n   * Specify if the field is required.\n   */\n  required?: boolean;\n  /**\n   * Dropdown options. Only nescessary when dropdown type is used.\n   */\n  options?: IDropdownOption[];\n  /**\n   * Dropdown custom options render method.\n   */\n  onRenderOption?: IRenderFunction<ISelectableOption>;\n  /**\n   * Input placeholder text.\n   */\n  placeholder?: string;\n  /**\n   * Default value for the field\n   */\n  defaultValue?: any;\n  /**\n   * Field will start to validate after users stop typing for `deferredValidationTime` milliseconds. Default: 200ms.\n   */\n  deferredValidationTime?: number;\n  /**\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\n   *\n   * When it returns string:\n   * - If valid, it returns empty string.\n   * - If invalid, the field will show a red border\n   */\n  onGetErrorMessage?: (value: any, index: number, currentItem: any) => string | Promise<string>;\n\n  /**\n   * Custom field rendering support\n   */\n  onCustomRender?: (field: ICustomCollectionField, value: any, onUpdate: (fieldId: string, value: any) => void, item: any, rowUniqueId: string, onCustomFieldValidation: (fieldId: string, errorMessage: string) => void) => JSX.Element;\n}\n\nexport enum CustomCollectionFieldType {\n  string = 1,\n  number,\n  boolean,\n  dropdown,\n  fabricIcon,\n  url,\n  custom\n}\n"],"sourceRoot":"../../../src"}