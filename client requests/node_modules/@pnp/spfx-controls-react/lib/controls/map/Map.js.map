{"version":3,"sources":["controls/map/Map.tsx"],"names":[],"mappings":"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","file":"controls/map/Map.js","sourcesContent":["import * as strings from 'ControlStrings';\nimport * as React from 'react';\nimport styles from './Maps.module.scss';\nimport { IMapProps, ICoordinates, MapType, LocationInfo, IMapState } from '.';\nimport { Label } from 'office-ui-fabric-react/lib/components/Label';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { Icon } from \"office-ui-fabric-react/lib/components/Icon\";\nimport { PrimaryButton } from \"office-ui-fabric-react/lib/components/Button\";\nimport { TextField } from \"office-ui-fabric-react/lib/components/TextField\";\nimport * as telemetry from '../../common/telemetry';\nimport { isEqual } from \"@microsoft/sp-lodash-subset\";\n\n\n/**\n * Maps control\n */\nexport class Map extends React.Component<IMapProps, IMapState> {\n\n  constructor(props: IMapProps) {\n    super(props);\n    const { coordinates } = this.props;\n\n    telemetry.track('ReactMap', {});\n\n    this.state = {\n      coordinates: coordinates || {\n        latitude: null,\n        longitude: null\n      },\n      address: \"\",\n      showmessageerror: false,\n      loading: false\n    };\n  }\n\n  /**\n   * componentWillMount lifecycle hook\n   */\n  // public componentWillMount(): void {\n  //   this.setState({\n  //     coordinates: this.props.coordinates\n  //   });\n  // }\n\n  /**\n   * componentWillUpdate lifecycle hook\n   */\n  public componentWillUpdate(nextProps: IMapProps, nextState: IMapState): void {\n    if (!isEqual(this.props.coordinates, nextProps.coordinates)) {\n      this.setState({\n        coordinates: nextProps.coordinates\n      });\n    }\n  }\n\n  /**\n  * Get the dif value based on zoom supplied (dif is for calculating the 4 corners of the map)\n  */\n  private _getDif(): number {\n    const { zoom } = this.props;\n    // 20200614 - JJ - support zoom levels beyond 15\n    const newZoom: number = zoom >= 0 ? zoom % 16 : 10;\n    const multiplier = Math.floor(newZoom / 16) + 1;\n    return (0.0025 + (0.005 * (15 - (newZoom))))/multiplier;\n  }\n\n  /**\n  * Get width as percentage\n  */\n  private _getWidth(): string {\n    let widthToReturn: string = this.props.width;\n    if (widthToReturn) {\n      let lastChar: string = widthToReturn.substr(widthToReturn.length - 1);\n      if (lastChar !== '%') {\n        widthToReturn = `${widthToReturn}%`;\n      }\n    } else {\n      widthToReturn = \"100%\";\n    }\n    return widthToReturn;\n  }\n\n  /**\n  * Get height of the maps\n  */\n  private _getHeight(): number {\n    return this.props.height ? this.props.height : 300;\n  }\n\n  /**\n  * Get the type of the maps\n  */\n  private _getMapType(): MapType {\n    return this.props.mapType ? this.props.mapType : MapType.standard;\n  }\n\n  /**\n  * Compute the url for the iframe\n  */\n  private _getMapUrl(): string {\n    const dif: number = this._getDif();\n    const mapType: MapType = this._getMapType();\n    const coordinates: ICoordinates = this.state.coordinates;\n\n    let mapUrl: string = \"\";\n\n    if (coordinates.latitude && coordinates.longitude) {\n      const bbox1: number = coordinates.longitude - dif;\n      const bbox2: number = coordinates.latitude - dif;\n      const bbox3: number = coordinates.longitude + dif;\n      const bbox4: number = coordinates.latitude + dif;\n\n      const rootUrl: string = \"https://www.openstreetmap.org/export/embed.html\";\n      const qs: string = `?bbox=${bbox1},${bbox2},${bbox3},${bbox4}&layer=${mapType}&marker=${coordinates.latitude},${coordinates.longitude}`;\n      mapUrl = rootUrl + qs;\n    }\n\n    return mapUrl;\n  }\n\n  /**\n   * Gets map url for a static Bing map\n   *\n   * @private\n   * @param {(string | number)} width\n   * @param {(string | number)} height\n   * @returns {string}\n   * @memberof Map\n   */\n  private _getBingMapUrl(width: string | number, height: string | number): string {\n    const { mapSource, zoom } = this.props;\n    const { coordinates: {latitude, longitude}} = this.state;\n    const mapType = mapSource === \"BingStatic\" ? \"s\" : \"d\";// s for static or d for draggable\n    return `https://www.bing.com/maps/embed?h=${height}&w=${width}&cp=${latitude}~${longitude}&lvl=${zoom}&typ=${mapType}&sty=r`;\n  }\n\n  /**\n   * Get coordinates using the OpenStreetMap nominatim API\n   */\n  //20200614 - updated comment to reflect API used\n  private _getCoordinates = async (): Promise<void> => {\n    this._startLoading();\n\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&limit=1&addressdetails=1&q=${this.state.address}`); // 20200614 - JJ - added addressdetails parameter\n      const mapData: LocationInfo[] = await response.json();\n      if (mapData && mapData.length > 0) {\n        const location = mapData[0];\n\n        const coordinates: ICoordinates = { // 20200614 - JJ - added typing\n          latitude: parseFloat(location.lat),\n          longitude: parseFloat(location.lon),\n          displayName: location.display_name, // 20200614 - JJ - let's keep the display name\n          address: location.address, // 20200614 - JJ - and the address\n        };\n\n        this.setState({\n          coordinates,\n          showmessageerror: false\n        });\n\n        // Check if the control needs to send an update\n        if (this.props.onUpdateCoordinates) {\n          this.props.onUpdateCoordinates(coordinates);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n\n      this.setState({\n        showmessageerror: true\n      });\n    }\n\n    this._stopLoading();\n  }\n\n  /**\n  * Update address on submit (while searching is enabled)\n  */\n  private _onChangedAddress = (newValue: string): void => {\n    this.setState({\n      address: newValue,\n    });\n  }\n\n  /**\n  * Stop loading by changing status to null\n  */\n  private _stopLoading(): void {\n    this.setState({\n      loading: false\n    });\n  }\n\n  /**\n  * Start loading by changing status to Spinner\n  */\n  private _startLoading(): void {\n    this.setState({\n      loading: true\n    });\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<IMapProps> {\n    const { mapSource } = this.props;\n    let width: string = this._getWidth();\n    let height: number = this._getHeight();\n    let mapUrl: string = [\"BingDraggable\", \"BingStatic\"].indexOf(mapSource) !== -1 ? this._getBingMapUrl(width, height) : this._getMapUrl(); //20200614 - JJ - rudimentary bing map support (draggable/static) with pushpin (static only)\n\n    return (\n      <div id=\"mapsContainer\" className={`${styles.mapContainer} ${this.props.mapsClassName ? this.props.mapsClassName : ''}`}>\n        {\n          this.props.titleText && (\n            <Label>{this.props.titleText}</Label>\n          )\n        }\n\n        {\n          (this.props.enableSearch) && (\n            <div id=\"mapsSearch\" className={styles.searchContainer}>\n              <TextField value={this.state.address}\n                onChanged={this._onChangedAddress}\n                onKeyPress={(event) => event.key === \"Enter\" ? this._getCoordinates() : null}\n                iconProps={{ iconName: 'World' }}\n                className={styles.searchTextBox} />\n\n              <PrimaryButton text={strings.mapsSearchButtonText}\n                title={strings.mapsSearchButtonText}\n                className={styles.submitButton}\n                iconProps={{ iconName: 'Search' }}\n                onClick={this._getCoordinates} />\n            </div>\n          )\n        }\n\n        {\n          this.state.loading ? (\n            <Spinner size={SpinnerSize.large} label={this.props.loadingMessage ? this.props.loadingMessage : strings.mapsLoadingText} />\n          ) : (\n              (mapUrl.length > 0 && !this.state.showmessageerror) ? (\n                <div id=\"mapsIframe\">\n                  <iframe width={width} height={height} scrolling=\"no\" src={mapUrl}></iframe>\n                  {mapSource === \"BingStatic\" && <Icon iconName=\"Location\" style={{fontSize: \"26px\", position:\"relative\", top: (Math.floor(-height/2)), left: \"50%\", marginTop: \"-14px\"}} ></Icon>}{/* 20200614 - JJ - rudimentary bing map support (draggable/static) with pushpin (static only)*/}\n                </div>\n              ) : (\n                  <p className={`ms-TextField-errorMessage ${styles.errorMessage} ${this.props.errorMessageClassName ? this.props.errorMessageClassName : ''}`}>\n                    <Icon iconName='Error' className={styles.errorIcon} />\n                    <span data-automation-id=\"error-message\">{this.props.errorMessage ? this.props.errorMessage : strings.mapsErrorMessage}</span>\n                  </p>\n                )\n            )\n        }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}