{"version":3,"sources":["controls/progress/IProgress.ts"],"names":[],"mappings":";;AAsBA;;GAEG;AACH,IAAY,mBAiBX;AAjBD,WAAY,mBAAmB;IAC3B;;OAEG;IACH,yEAAU,CAAA;IACV;;OAEG;IACH,yEAAU,CAAA;IACV;;OAEG;IACH,qEAAQ,CAAA;IACR;;OAEG;IACH,mEAAO,CAAA;AACX,CAAC,EAjBW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAiB9B","file":"controls/progress/IProgress.js","sourcesContent":["/**\n * Progress Action\n */\nexport interface IProgressAction {\n    /**\n     * Action title\n     */\n    title: string;\n    /**\n     * Sub actions titles\n     */\n    subActionsTitles?: string[];\n    /**\n     * Flag in the action has errored during the execution. Needed to correctly display action's icon\n     */\n    hasError?: boolean;\n    /**\n     * Error message\n     */\n    errorMessage?: string;\n}\n\n/**\n * Possible action's states\n */\nexport enum ProgressActionState {\n    /**\n     * Not started yet\n     */\n    notStarted,\n    /**\n     * Currently in progress\n     */\n    inProgress,\n    /**\n     * Finished with no errors\n     */\n    finished,\n    /**\n     * Errored\n     */\n    errored\n}\n\n/**\n * Progress component properties\n */\nexport interface IProgressProps {\n    /**\n     * Title (header)\n     */\n    title?: string;\n    /**\n     * Flag if overall progress indicator should be shown\n     */\n    showOverallProgress: boolean;\n    /**\n     * Flag if indeterminate progress animation will be shown \n     */\n    showIndeterminateOverallProgress?: boolean;\n    /**\n     * Flag if not started actions should not be rendered\n     */\n    hideNotStartedActions: boolean;\n    /**\n     * Progress actions\n     */\n    actions: IProgressAction[];\n    /**\n     * Current executing action\n     */\n    currentActionIndex?: number;\n    /**\n     * Height of the component\n     */\n    height?: string;\n    /**\n     * Text to display for long running operations\n     */\n    longRunningText?: string;\n    /**\n     * Delay until longRunningText is displayed im milliseconds. \n     * If not set or 0 longRunningText is displayed right away.\n     */\n    longRunningTextDisplayDelay?: number;\n    /**\n     * Class name to be applied to the component\n     */\n    className?: string;\n    /**\n     * Header class name. Header contains title, progress indicator, and delay text\n     */\n    headerClassName?: string;\n    /**\n     * Actions container class name\n     */\n    actionsContainerClassName?: string;\n    /**\n     * Single action class name\n     */\n    actionClassName?: string;\n\n    /**\n     * Success icon name. Default is CheckMark\n     */\n    successIconName?: string;\n    /**\n     * Error icon name. Default is Error\n     */\n    errorIconName?: string;\n    /**\n     * InProgress icon name. Default is '', spinner is displayed.\n     */\n    inProgressIconName?: string;\n\n}\n\n/**\n * Progress component state\n */\nexport interface IProgressState {\n    /**\n     * flag if long running text should be displayed\n     */\n    showLongRunningText?: boolean;\n}\n\n/**\n * Action component properties\n */\nexport interface IActionProps extends IProgressAction {\n    /**\n     * Action state\n     */\n    state: ProgressActionState;\n    /**\n     * Action class name\n     */\n    className?: string;\n\n    /**\n     * Success icon name. Default is CheckMark\n     */\n    successIconName?: string;\n    /**\n     * Error icon name. Default is Error\n     */\n    errorIconName?: string;\n    /**\n     * InProgress icon name. Default is '', spinner is displayed.\n     */\n    inProgressIconName?: string;\n}"],"sourceRoot":"../../../src"}