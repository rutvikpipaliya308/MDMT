{"version":3,"sources":["controls/siteBreadcrumb/SiteBreadcrumb.tsx"],"names":[],"mappings":"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","file":"controls/siteBreadcrumb/SiteBreadcrumb.js","sourcesContent":["import * as React from 'react';\nimport { ISiteBreadcrumbProps, ISiteBreadcrumbState, IWebInfo } from './ISiteBreadcrumb';\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { SPHttpClient, HttpClientResponse } from '@microsoft/sp-http';\nimport styles from './SiteBreadcrumb.module.scss';\nimport * as strings from 'ControlStrings';\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\nimport * as telemetry from '../../common/telemetry';\n\n/**\n * Site breadcrumb component\n */\nexport class SiteBreadcrumb extends React.Component<ISiteBreadcrumbProps, ISiteBreadcrumbState> {\n  private _linkItems: IBreadcrumbItem[];\n\n  constructor(props: ISiteBreadcrumbProps) {\n    super(props);\n\n    telemetry.track('ReactSiteBreadcrumb');\n\n    // Initiate the private link items variable\n    this._linkItems = [];\n\n    // Initiate the component state\n    this.state = {\n      breadcrumbItems: []\n    };\n  }\n\n  /**\n   * React component lifecycle hook, runs after render\n   */\n  public componentDidMount() {\n    // Start generating the links for the breadcrumb\n    this._generateLinks();\n  }\n\n  /**\n   * Start the link generation for the breadcrumb\n   */\n  private _generateLinks() {\n    // Add the current site to the links list\n    this._linkItems.push({\n      text: this.props.context.pageContext.web.title,\n      key: this.props.context.pageContext.web.id.toString(),\n      href: this.props.context.pageContext.web.absoluteUrl,\n      isCurrentItem: !!this.props.context.pageContext.list && !this.props.context.pageContext.list.serverRelativeUrl\n    });\n\n    // Check if the current list URL is available\n    if (!!this.props.context.pageContext.list && !!this.props.context.pageContext.list.serverRelativeUrl) {\n      // Add the current list to the links list\n      this._linkItems.push({\n        text: this.props.context.pageContext.list.title,\n        key: this.props.context.pageContext.list.id.toString(),\n        href: this.props.context.pageContext.list.serverRelativeUrl,\n        isCurrentItem: true\n      });\n    }\n\n    // Check if you are already on the root site\n    if (this.props.context.pageContext.site.serverRelativeUrl === this.props.context.pageContext.web.serverRelativeUrl) {\n      this._setBreadcrumbData();\n    } else {\n      if (Environment.type === EnvironmentType.Local) {\n        // Nothing to do right now\n        this._setBreadcrumbData();\n      } else {\n        // Retrieve the parent webs information\n        this._getParentWeb(this.props.context.pageContext.web.absoluteUrl);\n      }\n    }\n  }\n\n  /**\n   * Retrieve the parent web URLs\n   * @param webUrl Current URL of the web to process\n   */\n  private _getParentWeb(webUrl: string) {\n    // Retrieve the parent web info\n    const apiUrl = `${webUrl}/_api/web/parentweb?$select=Id,Title,ServerRelativeUrl`;\n    this.props.context.spHttpClient.get(apiUrl, SPHttpClient.configurations.v1)\n      .then((response: HttpClientResponse) => {\n        return response.json();\n      })\n      .then((webInfo: IWebInfo) => {\n        if (!webInfo.error) {\n          // Check if the correct data is retrieved\n          if (!webInfo.ServerRelativeUrl && !webInfo.Title) {\n            this._setBreadcrumbData();\n            return;\n          }\n\n          // Store the current site\n          this._linkItems.unshift({\n            text: webInfo.Title,\n            key: webInfo.Id,\n            href: webInfo.ServerRelativeUrl\n          });\n\n          // Check if you retrieved all the information up until the root site\n          if (webInfo.ServerRelativeUrl === this.props.context.pageContext.site.serverRelativeUrl) {\n            this._setBreadcrumbData();\n          } else {\n            // retrieve the information from the parent site\n            webUrl = webUrl.substring(0, (webUrl.indexOf(`${webInfo.ServerRelativeUrl}/`) + webInfo.ServerRelativeUrl.length));\n            this._getParentWeb(webUrl);\n          }\n        } else {\n          // Set the current breadcrumb data which is already retrieved\n          this._setBreadcrumbData();\n        }\n      });\n  }\n\n  /**\n   * Set the current breadcrumb data\n   */\n  private _setBreadcrumbData() {\n    this.setState({\n      breadcrumbItems: this._linkItems\n    });\n  }\n\n  /**\n   * Default React component render method\n   */\n  public render(): React.ReactElement<ISiteBreadcrumbProps> {\n    return (\n      <div className={styles.breadcrumb} >\n        <Breadcrumb\n          items={this.state.breadcrumbItems}\n          ariaLabel={strings.SiteBreadcrumbLabel}\n          className={styles.breadcrumbLinks} />\n      </div >\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}