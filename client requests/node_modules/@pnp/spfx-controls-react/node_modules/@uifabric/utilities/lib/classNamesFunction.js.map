{"version":3,"file":"classNamesFunction.js","sourceRoot":"../src/","sources":["classNamesFunction.ts"],"names":[],"mappings":";;AAAA,0DAA0E;AAI1E;;;GAGG;AACH;IAKE,iBAAiB;IACjB,OAAO,UACL,SAAgD,EAChD,UAAwB,IACC,OAAA,sBAAc,CAAC,SAAS,IAAI,SAAS,CAAC,UAAW,CAAC,CAC5E,EAD0B,CAC1B,CAAC;AACJ,CAAC;AAXD,gDAWC","sourcesContent":["import { mergeStyleSets, IStyle } from '@uifabric/merge-styles/lib/index';\nimport { IClassNames } from './IClassNames';\nimport { IStyleFunction } from './IStyleFunction';\n\n/**\n * Creates a getClassNames function which calls getStyles given the props, and injects them\n * into mergeStyleSets.\n */\nexport function classNamesFunction<TStyleProps extends {}, TStyles extends {[P in keyof TStyles]: IStyle}>(): (\n  getStyles?: IStyleFunction<TStyleProps, TStyles>,\n  styleProps?: TStyleProps\n) => IClassNames<TStyles> {\n\n  // TODO: memoize.\n  return (\n    getStyles?: IStyleFunction<TStyleProps, TStyles>,\n    styleProps?: TStyleProps\n  ): IClassNames<TStyles> => mergeStyleSets(getStyles && getStyles(styleProps!)\n  );\n}\n"]}