{"version":3,"file":"BaseComponent.js","sourceRoot":"../src/","sources":["BaseComponent.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Async } from './Async';\nimport { EventGroup } from './EventGroup';\nimport { IDisposable } from './IDisposable';\nimport { warnDeprecations, warnMutuallyExclusive, warnConditionallyRequiredProps, ISettingsMap } from './warn';\nimport { initializeFocusRects } from './initializeFocusRects';\nimport { initializeDir } from './initializeDir';\n\n/**\n * BaseProps interface.\n *\n * @public\n */\n// tslint:disable-next-line:no-any\nexport interface IBaseProps<T = any> {\n  componentRef?: (ref: T | null) => (void | T);\n}\n\n/**\n * BaseComponent class, which provides basic helpers for all components.\n *\n * @public\n */\nexport class BaseComponent<P extends IBaseProps = {}, S = {}> extends React.Component<P, S> {\n  /**\n   * @deprecated Use React's error boundaries instead.\n   */\n  // tslint:disable-next-line:no-any\n  public static onError: ((errorMessage?: string, ex?: any) => void);\n\n  /**\n   * Controls whether the componentRef prop will be resolved by this component instance. If you are\n   * implementing a passthrough (higher-order component), you would set this to false and pass through\n   * the props to the inner component, allowing it to resolve the componentRef.\n   */\n  protected _shouldUpdateComponentRef: boolean;\n\n  // tslint:disable:variable-name\n  private __async: Async;\n  private __events: EventGroup;\n  private __disposables: IDisposable[] | null;\n  private __resolves: { [name: string]: (ref: React.ReactNode) => React.ReactNode };\n  private __className: string;\n  // tslint:enable:variable-name\n\n  /**\n   * BaseComponent constructor\n   * @param props - The props for the component.\n   * @param context - The context for the component.\n   */\n  // tslint:disable-next-line:no-any\n  constructor(props: P, context?: any) {\n    super(props, context);\n\n    // Ensure basic assumptions about the environment.\n    initializeFocusRects();\n    initializeDir();\n\n    this._shouldUpdateComponentRef = true;\n\n    _makeAllSafe(this, BaseComponent.prototype, [\n      'componentWillMount',\n      'componentDidMount',\n      'shouldComponentUpdate',\n      'componentWillUpdate',\n      'componentWillReceiveProps',\n      'render',\n      'componentDidUpdate',\n      'componentWillUnmount'\n    ]);\n  }\n\n  /**\n   * When the component will receive props, make sure the componentRef is updated.\n   */\n  // tslint:disable-next-line:no-any\n  public componentWillReceiveProps(newProps: Readonly<P>, newContext: any): void {\n    this._updateComponentRef(this.props, newProps);\n  }\n\n  /**\n   * When the component has mounted, update the componentRef.\n   */\n  public componentDidMount(): void {\n    this._updateComponentRef(undefined, this.props);\n  }\n\n  /**\n   * If we have disposables, dispose them automatically on unmount.\n   */\n  public componentWillUnmount(): void {\n    if (this.__disposables) {\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\n        let disposable = this.__disposables[i];\n\n        if (disposable.dispose) {\n          disposable.dispose();\n        }\n      }\n      this.__disposables = null;\n    }\n  }\n\n  /**\n   * Gets the object's class name.\n   */\n  public get className(): string {\n    if (!this.__className) {\n      let funcNameRegex = /function (.{1,})\\(/;\n      let results = (funcNameRegex).exec((this).constructor.toString());\n\n      this.__className = (results && results.length > 1) ? results[1] : '';\n    }\n\n    return this.__className;\n  }\n\n  /**\n   * Allows subclasses to push things to this._disposables to be auto disposed.\n   */\n  protected get _disposables(): IDisposable[] {\n    if (!this.__disposables) {\n      this.__disposables = [];\n    }\n    return this.__disposables;\n  }\n\n  /**\n   * Gets the async instance associated with the component, created on demand. The async instance gives\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _async(): Async {\n    if (!this.__async) {\n      this.__async = new Async(this);\n      this._disposables.push(this.__async);\n    }\n\n    return this.__async;\n  }\n\n  /**\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\n   * will be automatically disconnected after unmounting. The helpers within the events object also\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _events(): EventGroup {\n    if (!this.__events) {\n      this.__events = new EventGroup(this);\n      this._disposables.push(this.__events);\n    }\n\n    return this.__events;\n  }\n\n  /**\n   * Helper to return a memoized ref resolver function.\n   * @param refName - Name of the member to assign the ref to.\n   * @returns A function instance keyed from the given refname.\n   * @deprecated Use `createRef` from `@uifabric/utilities`\n   */\n  protected _resolveRef(refName: string): (ref: React.ReactNode) => React.ReactNode {\n    if (!this.__resolves) {\n      this.__resolves = {};\n    }\n    if (!this.__resolves[refName]) {\n      // tslint:disable-next-line:no-any\n      this.__resolves[refName] = (ref: React.ReactNode) => {\n        // tslint:disable-next-line:no-any\n        return (this as any)[refName] = ref;\n      };\n    }\n\n    return this.__resolves[refName];\n  }\n\n  /**\n   * Updates the componentRef (by calling it with \"this\" when necessary.)\n   */\n  protected _updateComponentRef(currentProps: IBaseProps | undefined, newProps: IBaseProps = {}): void {\n    if (this._shouldUpdateComponentRef &&\n      ((!currentProps && newProps.componentRef) ||\n        (currentProps && currentProps.componentRef !== newProps.componentRef))) {\n\n      if (currentProps && currentProps.componentRef) {\n        currentProps.componentRef(null);\n      }\n\n      if (newProps.componentRef) {\n        newProps.componentRef(this);\n      }\n    }\n  }\n  /**\n   * Warns when a deprecated props are being used.\n   *\n   * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\n   * either null or a replacement prop name.\n   */\n  protected _warnDeprecations(deprecationMap: ISettingsMap<P>): void {\n    warnDeprecations(this.className, this.props, deprecationMap);\n  }\n\n  /**\n   * Warns when props which are mutually exclusive with each other are both used.\n   *\n   * @param mutuallyExclusiveMap - The map of mutually exclusive props.\n   */\n  protected _warnMutuallyExclusive(mutuallyExclusiveMap: ISettingsMap<P>): void {\n    warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);\n  }\n\n  /**\n   * Warns when props are required if a condition is met.\n   *\n   * @param requiredProps - The name of the props that are required when the condition is met.\n   * @param conditionalPropName - The name of the prop that the condition is based on.\n   * @param condition - Whether the condition is met.\n   */\n  protected _warnConditionallyRequiredProps(requiredProps: string[], conditionalPropName: string, condition: boolean): void {\n    warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);\n  }\n\n}\n\n/**\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\n */\nfunction _makeAllSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodNames: string[]): void {\n  for (let i = 0, len = methodNames.length; i < len; i++) {\n    _makeSafe(obj, prototype, methodNames[i]);\n  }\n}\n\nfunction _makeSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodName: string): void {\n  // tslint:disable:no-any\n  let classMethod = (obj as any)[methodName];\n  let prototypeMethod = (prototype as any)[methodName];\n  // tslint:enable:no-any\n\n  if (classMethod || prototypeMethod) {\n    // tslint:disable-next-line:no-any\n    (obj as any)[methodName] = function (): any {\n      let retVal;\n\n      if (prototypeMethod) {\n        retVal = prototypeMethod.apply(this, arguments);\n      }\n      if (classMethod !== prototypeMethod) {\n        retVal = classMethod.apply(this, arguments);\n      }\n\n      return retVal;\n    };\n  }\n}\n\n/**\n * Simple constant function for returning null, used to render empty templates in JSX.\n *\n * @public\n */\nexport function nullRender(): JSX.Element | null { return null; }\n"]}