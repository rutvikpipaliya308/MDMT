{"version":3,"file":"scroll.js","sourceRoot":"../src/","sources":["scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDocument } from './dom';\nimport { mergeStyles } from '@uifabric/merge-styles/lib/index';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nconst DisabledScrollClassName = mergeStyles({\n  overflow: 'hidden !important' as 'hidden'\n});\n\n/**\n * Placing this attribute on scrollable divs optimizes detection to know\n * if the div is scrollable or not (given we can avoid expensive operations\n * like getComputedStyle.)\n *\n * @public\n */\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\n/**\n * Disables the body scrolling.\n *\n * @public\n */\nexport function disableBodyScroll(): void {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(DisabledScrollClassName);\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\n/**\n * Enables the body scrolling.\n *\n * @public\n */\nexport function enableBodyScroll(): void {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(DisabledScrollClassName);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n *\n * @public\n */\nexport function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | null {\n  let el: HTMLElement | null = startingElement;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const computedStyles = getComputedStyle(el);\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === document.body) {\n    // tslint:disable-next-line:no-any\n    el = window as any;\n  }\n\n  return el;\n}"]}