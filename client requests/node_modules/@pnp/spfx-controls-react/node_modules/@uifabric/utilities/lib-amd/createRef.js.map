{"version":3,"file":"createRef.js","sourceRoot":"../src/","sources":["createRef.ts"],"names":[],"mappings":";;;IAUA;;;;;;OAMG;IACH;QACE,IAAM,SAAS,GAAG,CAAC,UAAC,OAAiB;YACnC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,CAAC,CAAiB,CAAC;QAEnB,6EAA6E;QAC7E,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE;YACxC,GAAG,EAAH;gBACE,OAAO,SAAS,CAAC,OAAO,CAAC;YAC3B,CAAC;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QAEzB,OAAO,SAAS,CAAC;IACnB,CAAC;IAfD,8BAeC","sourcesContent":["export type RefObject<T> = {\n  (component: T | null): void;\n  current: T | null;\n\n  /**\n   * @deprecated Use .current as that is consistent the official React Api.\n   */\n  value: T | null;\n};\n\n/**\n * This is a polyfill for the React.createRef() api.\n * For more info on React.createRef() see the official React documentation\n * on creating and accessing refs.\n * @see https://reactjs.org/docs/refs-and-the-dom.html#creating-refs\n * @see https://reactjs.org/docs/refs-and-the-dom.html#accessing-refs\n */\nexport function createRef<T>(): RefObject<T> {\n  const refObject = ((element: T | null): void => {\n    refObject.current = element;\n  }) as RefObject<T>;\n\n  // This getter is here to support the deprecated value prop on the refObject.\n  Object.defineProperty(refObject, 'value', {\n    get(): T | null {\n      return refObject.current;\n    }\n  });\n\n  refObject.current = null;\n\n  return refObject;\n}"]}