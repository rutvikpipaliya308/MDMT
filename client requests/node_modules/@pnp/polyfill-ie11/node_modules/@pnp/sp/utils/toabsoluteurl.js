import { __awaiter, __generator } from "tslib";
import { combine, isUrlAbsolute, hOP, safeGlobal } from "@pnp/common";
import { SPRuntimeConfig } from "../splibconfig";
/**
 * Ensures that a given url is absolute for the current web based on context
 *
 * @param candidateUrl The url to make absolute
 *
 */
export function toAbsoluteUrl(candidateUrl) {
    return __awaiter(this, void 0, void 0, function () {
        var baseUrl_1;
        return __generator(this, function (_a) {
            if (isUrlAbsolute(candidateUrl)) {
                // if we are already absolute, then just return the url
                return [2 /*return*/, candidateUrl];
            }
            if (SPRuntimeConfig.baseUrl !== null) {
                // base url specified either with baseUrl of spfxContext config property
                return [2 /*return*/, combine(SPRuntimeConfig.baseUrl, candidateUrl)];
            }
            if (safeGlobal._spPageContextInfo !== undefined) {
                // operating in classic pages
                if (hOP(safeGlobal._spPageContextInfo, "webAbsoluteUrl")) {
                    return [2 /*return*/, combine(safeGlobal._spPageContextInfo.webAbsoluteUrl, candidateUrl)];
                }
                else if (hOP(safeGlobal._spPageContextInfo, "webServerRelativeUrl")) {
                    return [2 /*return*/, combine(safeGlobal._spPageContextInfo.webServerRelativeUrl, candidateUrl)];
                }
            }
            // does window.location exist and have a certain path part in it?
            if (safeGlobal.location !== undefined) {
                baseUrl_1 = safeGlobal.location.toString().toLowerCase();
                ["/_layouts/", "/siteassets/"].forEach(function (s) {
                    var index = baseUrl_1.indexOf(s);
                    if (index > 0) {
                        return combine(baseUrl_1.substr(0, index), candidateUrl);
                    }
                });
            }
            return [2 /*return*/, candidateUrl];
        });
    });
}
//# sourceMappingURL=toabsoluteurl.js.map