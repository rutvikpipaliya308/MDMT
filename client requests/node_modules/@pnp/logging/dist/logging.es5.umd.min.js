/**
@license
 * @pnp/logging v1.0.1 - pnp - light-weight, subscribable logging framework
 * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)
 * Copyright (c) 2018 Microsoft
 * docs: http://officedev.github.io/PnP-JS-Core
 * source: https://github.com/pnp/pnp
 * bugs: https://github.com/pnp/pnp/issues
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e.pnp=e.pnp||{},e.pnp.logging={}))}(this,function(e){"use strict";var n=function(){function e(){}return Object.defineProperty(e,"activeLogLevel",{get:function(){return e.instance.activeLogLevel},set:function(n){e.instance.activeLogLevel=n},enumerable:!0,configurable:!0}),Object.defineProperty(e,"instance",{get:function(){return void 0!==e._instance&&null!==e._instance||(e._instance=new t),e._instance},enumerable:!0,configurable:!0}),e.subscribe=function(){for(var n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];n.map(function(n){return e.instance.subscribe(n)})},e.clearSubscribers=function(){return e.instance.clearSubscribers()},Object.defineProperty(e,"count",{get:function(){return e.instance.count},enumerable:!0,configurable:!0}),e.write=function(n,t){void 0===t&&(t=0),e.instance.log({level:t,message:n})},e.writeJSON=function(n,t){void 0===t&&(t=0),e.instance.log({level:t,message:JSON.stringify(n)})},e.log=function(n){e.instance.log(n)},e.error=function(n){e.instance.log({data:n,level:3,message:n.message})},e}(),t=function(){function e(e,n){void 0===e&&(e=2),void 0===n&&(n=[]),this.activeLogLevel=e,this.subscribers=n}return e.prototype.subscribe=function(e){this.subscribers.push(e)},e.prototype.clearSubscribers=function(){var e=this.subscribers.slice(0);return this.subscribers.length=0,e},Object.defineProperty(e.prototype,"count",{get:function(){return this.subscribers.length},enumerable:!0,configurable:!0}),e.prototype.write=function(e,n){void 0===n&&(n=0),this.log({level:n,message:e})},e.prototype.log=function(e){void 0!==e&&this.activeLogLevel<=e.level&&this.subscribers.map(function(n){return n.log(e)})},e}(),i=function(){function e(){}return e.prototype.log=function(e){var n=this.format(e);switch(e.level){case 0:case 1:console.log(n);break;case 2:console.warn(n);break;case 3:console.error(n)}},e.prototype.format=function(e){var n=[];return n.push("Message: "+e.message),void 0!==e.data&&n.push(" Data: "+JSON.stringify(e.data)),n.join("")},e}(),o=function(){function e(e){this.method=e}return e.prototype.log=function(e){this.method(e)},e}();e.Logger=n,e.ConsoleListener=i,e.FunctionListener=o,Object.defineProperty(e,"__esModule",{value:!0})});