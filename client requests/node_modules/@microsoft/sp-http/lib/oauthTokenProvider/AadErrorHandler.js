import AadTokenProvider, { TokenAcquisitionEventArgs } from './AadTokenProvider';
import { _SPEventManager } from '@microsoft/sp-core-library';
import strings from '../SPHttpStrings.resx';
var AadErrorHandler =  (function () {
    function AadErrorHandler() {
    }
    AadErrorHandler._handleInteractionRequiredFailures = function (authContext, errorMessage, resource) {
        var urlNavigate = authContext._getNavigateUrl(authContext.RESPONSE_TYPE.TOKEN, resource) +
            '&prompt=select_account';
        _SPEventManager.instance.raiseEvent(AadTokenProvider._tokenAcquisitionEventId, new TokenAcquisitionEventArgs(strings.additionalCredentialsWarning, urlNavigate));
    };
    AadErrorHandler._doesErrorCodeExist = function (errorMessage, setOfErrorCodes) {
        var errorCodes = errorMessage.match(/(AADSTS)[0-9]+/g) || [];
        for (var _i = 0, errorCodes_1 = errorCodes; _i < errorCodes_1.length; _i++) {
            var errorCode = errorCodes_1[_i];
            if (setOfErrorCodes.has(errorCode)) {
                return true;
            }
        }
        return false;
    };
    return AadErrorHandler;
}());
export { AadErrorHandler };
