import { Log } from '@microsoft/sp-core-library';
import DiagnosticsSettingsManager from './DiagnosticsSettingsManager';
import TraceLogger from './Api/Trace/TraceLogger';
var Diagnostics =  (function () {
    function Diagnostics() {
    }
    Diagnostics.initialize = function (settings) {
        if (!Diagnostics._isInitialized) {
            DiagnosticsSettingsManager.initialize(settings);
            TraceLogger.shouldWriteToConsole = settings.enableConsoleLog;
            TraceLogger._addHandler({
                log: function (traceEvent) {
                    Log.info(traceEvent.eventName, "EventName:" + traceEvent.data.toString() + ", ResultCode: " + traceEvent.resultCode);
                },
                verbose: function (traceEvent) {
                    Log.verbose(traceEvent.eventName, traceEvent.data.toString());
                }
            });
            Diagnostics._isInitialized = true;
        }
    };
    Object.defineProperty(Diagnostics, "isInitialized", {
        get: function () {
            return this._isInitialized;
        },
        enumerable: true,
        configurable: true
    });
    Diagnostics.updateSettings = function (settings) {
        DiagnosticsSettingsManager.updateSettings(settings);
    };
    Diagnostics._isInitialized = false;
    return Diagnostics;
}());
export default Diagnostics;
