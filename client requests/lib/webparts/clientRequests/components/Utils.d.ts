import { Web } from 'sp-pnp-js';
import { WebPartContext } from "@microsoft/sp-webpart-base";
import { HttpClientResponse } from '@microsoft/sp-http';
import { IDropdownProperties } from './IDropdownProperties';
import { ISubmitData } from './common/Attachments/IAttachmentsProps';
export declare const GetMasterListItems: (objWeb: Web, listURL: string, property: string) => Promise<any[]>;
export declare const GetDropDownValuesForCompany: (objWeb: Web, listURL: string, property: string) => Promise<any[]>;
export declare const GetDropdownStateValue: (value: string, dpProperty: IDropdownProperties) => IDropdownProperties;
export declare const GetDropdownStateValueDefaultTaxCode: (itemValue: string, dpProperty: any) => IDropdownProperties;
export declare const GetDropdownStateValueClientIDType: (itemValue: string, dpProperty: any) => IDropdownProperties;
export declare const GetClientIDTypeDescription: (itemValue: string, dpProperty: any) => any;
export declare const GetMasterListItemsForDefaultTaxCode: (objWeb: Web, listURL: string, property: string) => Promise<any[]>;
export declare const GetSelectedDropdownValue: (itemValue: string, dropdown: any) => any;
export declare const GetSingleListData: (objWeb: Web, listURL: string, viewXML: string) => Promise<any>;
export declare const CheckSpecialChar: (array: any[], value: string) => boolean;
export declare const CheckIsMaconomyIdPresent: (objWeb: Web, listURL: string, macID: string) => Promise<boolean>;
export declare const CallMSFlow: (context: WebPartContext, body: string, flowURL: string) => Promise<HttpClientResponse>;
export declare const CheckRequiredField: (value: string) => boolean;
export declare const CheckZipCodeValidationForSaudiCompany: (value: string) => boolean;
export declare const GetCurrentUserId: (objWeb: Web) => Promise<Number>;
export declare const GetUserUPNFromGraphAPI: (objContext: WebPartContext) => Promise<string>;
export declare const GenerateRequestID: (value: number) => string;
export declare const CreateAttachmentFolder: (objWeb: Web, serverRelativeURL: string, itemID: number) => Promise<string>;
export declare const CheckUserAddPermission: (objWeb: Web, PermissionKind: any) => Promise<boolean>;
export declare const CheckUserItemEditPermission: (serverRelativeURL: string, objWeb: Web, PermissionKind: any, itemID: number) => Promise<boolean>;
export declare const TrimData: (value: string) => string;
export declare const GetMaconomyDataFromKey: (objWeb: Web, listURL: string, key: string) => Promise<string>;
export declare const SplitData: (value: string) => string;
export declare const GetCurrentUserOffice: (objWeb: Web, objContext: WebPartContext) => Promise<string>;
export declare const GetUserDetailsFromGraphAPI: (objContext: WebPartContext) => Promise<any>;
export declare const GetSubmitDetails: (objsubmitData: ISubmitData, strings: any, approvalData: any, requestorID: any, objWeb: Web, serverRelativeURL: string, requestoridd: string) => Promise<ISubmitData>;
export declare const GetNotificationApprover: (primaryApprover: any, subApprover: any, requestorID: any) => any;
export declare const GetSubstituteApprover: (primaryApprover: any, subApprover: any, requestorID: any) => any;
export declare const AddErrorLogs: (serverRelativeUrl: string, objWeb: Web, RequestID: any, Error: any) => Promise<import("../../../../../../../../../Tatvasoft/online-application/MDMT/WebParts/client requests/node_modules/sp-pnp-js/lib/sharepoint/items").ItemAddResult>;
//# sourceMappingURL=Utils.d.ts.map